{
  "hash": "41067e7082ec6c2768abbb1e929f1305",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Introduction to dplyr\"\ndescription: \"Learn the basics of data manipulation with the dplyr package in R\"\ndate: \"2025-03-30\"\ncategories: [data-manipulation, tidyverse]\nimage: \"https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/dplyr.png\"\nexecute:\n  echo: true\n  warning: false\n  message: false\n  eval: true\n---\n\n\n\n\n## Introduction to dplyr\n\nThe `dplyr` package is part of the tidyverse and provides a grammar for data manipulation in R. It makes data transformation tasks more intuitive and readable.\n\n### Getting Started with dplyr\n\nFirst, let's install and load the package:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Install if needed (uncomment to run)\n# install.packages(\"dplyr\")\n# install.packages(\"tibble\")\n\n# Load the packages\nlibrary(dplyr)\nlibrary(tibble)  # For rownames_to_column function\n\n# We'll use the built-in mtcars dataset\ndata(mtcars)\nglimpse(mtcars)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 32\nColumns: 11\n$ mpg  <dbl> 21.0, 21.0, 22.8, 21.4, 18.7, 18.1, 14.3, 24.4, 22.8, 19.2, 17.8,…\n$ cyl  <dbl> 6, 6, 4, 6, 8, 6, 8, 4, 4, 6, 6, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 8,…\n$ disp <dbl> 160.0, 160.0, 108.0, 258.0, 360.0, 225.0, 360.0, 146.7, 140.8, 16…\n$ hp   <dbl> 110, 110, 93, 110, 175, 105, 245, 62, 95, 123, 123, 180, 180, 180…\n$ drat <dbl> 3.90, 3.90, 3.85, 3.08, 3.15, 2.76, 3.21, 3.69, 3.92, 3.92, 3.92,…\n$ wt   <dbl> 2.620, 2.875, 2.320, 3.215, 3.440, 3.460, 3.570, 3.190, 3.150, 3.…\n$ qsec <dbl> 16.46, 17.02, 18.61, 19.44, 17.02, 20.22, 15.84, 20.00, 22.90, 18…\n$ vs   <dbl> 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0,…\n$ am   <dbl> 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0,…\n$ gear <dbl> 4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3,…\n$ carb <dbl> 4, 4, 1, 1, 2, 1, 4, 2, 2, 4, 4, 3, 3, 3, 4, 4, 4, 1, 2, 1, 1, 2,…\n```\n\n\n:::\n:::\n\n\n\n\n### The Main dplyr Verbs\n\ndplyr is built around a set of core verbs (functions) that perform common data manipulation tasks:\n\n#### 1. `filter()` - Subset rows based on conditions\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Select cars with 6 cylinders\nfilter(mtcars, cyl == 6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                mpg cyl  disp  hp drat    wt  qsec vs am gear carb\nMazda RX4      21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag  21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4\nHornet 4 Drive 21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1\nValiant        18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1\nMerc 280       19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4\nMerc 280C      17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4\nFerrari Dino   19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6\n```\n\n\n:::\n\n```{.r .cell-code}\n# Multiple conditions: cars with 6 cylinders AND mpg > 20\nfilter(mtcars, cyl == 6, mpg > 20)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4      21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag  21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nHornet 4 Drive 21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\n```\n\n\n:::\n\n```{.r .cell-code}\n# OR conditions\nfilter(mtcars, cyl == 6 | mpg > 30)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                mpg cyl  disp  hp drat    wt  qsec vs am gear carb\nMazda RX4      21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag  21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4\nHornet 4 Drive 21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1\nValiant        18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1\nMerc 280       19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4\nMerc 280C      17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4\nFiat 128       32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1\nHonda Civic    30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2\nToyota Corolla 33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1\nLotus Europa   30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2\nFerrari Dino   19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6\n```\n\n\n:::\n:::\n\n\n\n\n#### 2. `select()` - Pick columns by name\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Select specific columns\nselect(mtcars, mpg, cyl, hp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                     mpg cyl  hp\nMazda RX4           21.0   6 110\nMazda RX4 Wag       21.0   6 110\nDatsun 710          22.8   4  93\nHornet 4 Drive      21.4   6 110\nHornet Sportabout   18.7   8 175\nValiant             18.1   6 105\nDuster 360          14.3   8 245\nMerc 240D           24.4   4  62\nMerc 230            22.8   4  95\nMerc 280            19.2   6 123\nMerc 280C           17.8   6 123\nMerc 450SE          16.4   8 180\nMerc 450SL          17.3   8 180\nMerc 450SLC         15.2   8 180\nCadillac Fleetwood  10.4   8 205\nLincoln Continental 10.4   8 215\nChrysler Imperial   14.7   8 230\nFiat 128            32.4   4  66\nHonda Civic         30.4   4  52\nToyota Corolla      33.9   4  65\nToyota Corona       21.5   4  97\nDodge Challenger    15.5   8 150\nAMC Javelin         15.2   8 150\nCamaro Z28          13.3   8 245\nPontiac Firebird    19.2   8 175\nFiat X1-9           27.3   4  66\nPorsche 914-2       26.0   4  91\nLotus Europa        30.4   4 113\nFord Pantera L      15.8   8 264\nFerrari Dino        19.7   6 175\nMaserati Bora       15.0   8 335\nVolvo 142E          21.4   4 109\n```\n\n\n:::\n\n```{.r .cell-code}\n# Select a range of columns\nselect(mtcars, mpg:hp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                     mpg cyl  disp  hp\nMazda RX4           21.0   6 160.0 110\nMazda RX4 Wag       21.0   6 160.0 110\nDatsun 710          22.8   4 108.0  93\nHornet 4 Drive      21.4   6 258.0 110\nHornet Sportabout   18.7   8 360.0 175\nValiant             18.1   6 225.0 105\nDuster 360          14.3   8 360.0 245\nMerc 240D           24.4   4 146.7  62\nMerc 230            22.8   4 140.8  95\nMerc 280            19.2   6 167.6 123\nMerc 280C           17.8   6 167.6 123\nMerc 450SE          16.4   8 275.8 180\nMerc 450SL          17.3   8 275.8 180\nMerc 450SLC         15.2   8 275.8 180\nCadillac Fleetwood  10.4   8 472.0 205\nLincoln Continental 10.4   8 460.0 215\nChrysler Imperial   14.7   8 440.0 230\nFiat 128            32.4   4  78.7  66\nHonda Civic         30.4   4  75.7  52\nToyota Corolla      33.9   4  71.1  65\nToyota Corona       21.5   4 120.1  97\nDodge Challenger    15.5   8 318.0 150\nAMC Javelin         15.2   8 304.0 150\nCamaro Z28          13.3   8 350.0 245\nPontiac Firebird    19.2   8 400.0 175\nFiat X1-9           27.3   4  79.0  66\nPorsche 914-2       26.0   4 120.3  91\nLotus Europa        30.4   4  95.1 113\nFord Pantera L      15.8   8 351.0 264\nFerrari Dino        19.7   6 145.0 175\nMaserati Bora       15.0   8 301.0 335\nVolvo 142E          21.4   4 121.0 109\n```\n\n\n:::\n\n```{.r .cell-code}\n# Select all columns except some\nselect(mtcars, -gear, -carb)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                     mpg cyl  disp  hp drat    wt  qsec vs am\nMazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1\nMazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1\nDatsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1\nHornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0\nHornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0\nValiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0\nDuster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0\nMerc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0\nMerc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0\nMerc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0\nMerc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0\nMerc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0\nMerc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0\nMerc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0\nCadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0\nLincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0\nChrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0\nFiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1\nHonda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1\nToyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1\nToyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0\nDodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0\nAMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0\nCamaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0\nPontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0\nFiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1\nPorsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1\nLotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1\nFord Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1\nFerrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1\nMaserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1\nVolvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1\n```\n\n\n:::\n\n```{.r .cell-code}\n# Rename columns while selecting\nselect(mtcars, miles_per_gallon = mpg, cylinders = cyl)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                    miles_per_gallon cylinders\nMazda RX4                       21.0         6\nMazda RX4 Wag                   21.0         6\nDatsun 710                      22.8         4\nHornet 4 Drive                  21.4         6\nHornet Sportabout               18.7         8\nValiant                         18.1         6\nDuster 360                      14.3         8\nMerc 240D                       24.4         4\nMerc 230                        22.8         4\nMerc 280                        19.2         6\nMerc 280C                       17.8         6\nMerc 450SE                      16.4         8\nMerc 450SL                      17.3         8\nMerc 450SLC                     15.2         8\nCadillac Fleetwood              10.4         8\nLincoln Continental             10.4         8\nChrysler Imperial               14.7         8\nFiat 128                        32.4         4\nHonda Civic                     30.4         4\nToyota Corolla                  33.9         4\nToyota Corona                   21.5         4\nDodge Challenger                15.5         8\nAMC Javelin                     15.2         8\nCamaro Z28                      13.3         8\nPontiac Firebird                19.2         8\nFiat X1-9                       27.3         4\nPorsche 914-2                   26.0         4\nLotus Europa                    30.4         4\nFord Pantera L                  15.8         8\nFerrari Dino                    19.7         6\nMaserati Bora                   15.0         8\nVolvo 142E                      21.4         4\n```\n\n\n:::\n:::\n\n\n\n\n#### 3. `mutate()` - Create new columns\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Add a new column\nmutate(mtcars, \n       kpl = mpg * 0.425,  # Convert mpg to km per liter\n       hp_per_cyl = hp / cyl)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb     kpl\nMazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4  8.9250\nMazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4  8.9250\nDatsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1  9.6900\nHornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1  9.0950\nHornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2  7.9475\nValiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1  7.6925\nDuster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4  6.0775\nMerc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2 10.3700\nMerc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2  9.6900\nMerc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4  8.1600\nMerc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4  7.5650\nMerc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3  6.9700\nMerc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3  7.3525\nMerc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3  6.4600\nCadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4  4.4200\nLincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4  4.4200\nChrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4  6.2475\nFiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1 13.7700\nHonda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2 12.9200\nToyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1 14.4075\nToyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1  9.1375\nDodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2  6.5875\nAMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2  6.4600\nCamaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4  5.6525\nPontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2  8.1600\nFiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1 11.6025\nPorsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2 11.0500\nLotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2 12.9200\nFord Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4  6.7150\nFerrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6  8.3725\nMaserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8  6.3750\nVolvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2  9.0950\n                    hp_per_cyl\nMazda RX4             18.33333\nMazda RX4 Wag         18.33333\nDatsun 710            23.25000\nHornet 4 Drive        18.33333\nHornet Sportabout     21.87500\nValiant               17.50000\nDuster 360            30.62500\nMerc 240D             15.50000\nMerc 230              23.75000\nMerc 280              20.50000\nMerc 280C             20.50000\nMerc 450SE            22.50000\nMerc 450SL            22.50000\nMerc 450SLC           22.50000\nCadillac Fleetwood    25.62500\nLincoln Continental   26.87500\nChrysler Imperial     28.75000\nFiat 128              16.50000\nHonda Civic           13.00000\nToyota Corolla        16.25000\nToyota Corona         24.25000\nDodge Challenger      18.75000\nAMC Javelin           18.75000\nCamaro Z28            30.62500\nPontiac Firebird      21.87500\nFiat X1-9             16.50000\nPorsche 914-2         22.75000\nLotus Europa          28.25000\nFord Pantera L        33.00000\nFerrari Dino          29.16667\nMaserati Bora         41.87500\nVolvo 142E            27.25000\n```\n\n\n:::\n\n```{.r .cell-code}\n# Modify existing columns and add new ones\nmutate(mtcars,\n       mpg = mpg * 0.425,  # Overwrite mpg with km per liter\n       efficiency = mpg / wt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                        mpg cyl  disp  hp drat    wt  qsec vs am gear carb\nMazda RX4            8.9250   6 160.0 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag        8.9250   6 160.0 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710           9.6900   4 108.0  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive       9.0950   6 258.0 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout    7.9475   8 360.0 175 3.15 3.440 17.02  0  0    3    2\nValiant              7.6925   6 225.0 105 2.76 3.460 20.22  1  0    3    1\nDuster 360           6.0775   8 360.0 245 3.21 3.570 15.84  0  0    3    4\nMerc 240D           10.3700   4 146.7  62 3.69 3.190 20.00  1  0    4    2\nMerc 230             9.6900   4 140.8  95 3.92 3.150 22.90  1  0    4    2\nMerc 280             8.1600   6 167.6 123 3.92 3.440 18.30  1  0    4    4\nMerc 280C            7.5650   6 167.6 123 3.92 3.440 18.90  1  0    4    4\nMerc 450SE           6.9700   8 275.8 180 3.07 4.070 17.40  0  0    3    3\nMerc 450SL           7.3525   8 275.8 180 3.07 3.730 17.60  0  0    3    3\nMerc 450SLC          6.4600   8 275.8 180 3.07 3.780 18.00  0  0    3    3\nCadillac Fleetwood   4.4200   8 472.0 205 2.93 5.250 17.98  0  0    3    4\nLincoln Continental  4.4200   8 460.0 215 3.00 5.424 17.82  0  0    3    4\nChrysler Imperial    6.2475   8 440.0 230 3.23 5.345 17.42  0  0    3    4\nFiat 128            13.7700   4  78.7  66 4.08 2.200 19.47  1  1    4    1\nHonda Civic         12.9200   4  75.7  52 4.93 1.615 18.52  1  1    4    2\nToyota Corolla      14.4075   4  71.1  65 4.22 1.835 19.90  1  1    4    1\nToyota Corona        9.1375   4 120.1  97 3.70 2.465 20.01  1  0    3    1\nDodge Challenger     6.5875   8 318.0 150 2.76 3.520 16.87  0  0    3    2\nAMC Javelin          6.4600   8 304.0 150 3.15 3.435 17.30  0  0    3    2\nCamaro Z28           5.6525   8 350.0 245 3.73 3.840 15.41  0  0    3    4\nPontiac Firebird     8.1600   8 400.0 175 3.08 3.845 17.05  0  0    3    2\nFiat X1-9           11.6025   4  79.0  66 4.08 1.935 18.90  1  1    4    1\nPorsche 914-2       11.0500   4 120.3  91 4.43 2.140 16.70  0  1    5    2\nLotus Europa        12.9200   4  95.1 113 3.77 1.513 16.90  1  1    5    2\nFord Pantera L       6.7150   8 351.0 264 4.22 3.170 14.50  0  1    5    4\nFerrari Dino         8.3725   6 145.0 175 3.62 2.770 15.50  0  1    5    6\nMaserati Bora        6.3750   8 301.0 335 3.54 3.570 14.60  0  1    5    8\nVolvo 142E           9.0950   4 121.0 109 4.11 2.780 18.60  1  1    4    2\n                    efficiency\nMazda RX4            3.4064885\nMazda RX4 Wag        3.1043478\nDatsun 710           4.1767241\nHornet 4 Drive       2.8289269\nHornet Sportabout    2.3103198\nValiant              2.2232659\nDuster 360           1.7023810\nMerc 240D            3.2507837\nMerc 230             3.0761905\nMerc 280             2.3720930\nMerc 280C            2.1991279\nMerc 450SE           1.7125307\nMerc 450SL           1.9711796\nMerc 450SLC          1.7089947\nCadillac Fleetwood   0.8419048\nLincoln Continental  0.8148968\nChrysler Imperial    1.1688494\nFiat 128             6.2590909\nHonda Civic          8.0000000\nToyota Corolla       7.8514986\nToyota Corona        3.7068966\nDodge Challenger     1.8714489\nAMC Javelin          1.8806405\nCamaro Z28           1.4720052\nPontiac Firebird     2.1222367\nFiat X1-9            5.9961240\nPorsche 914-2        5.1635514\nLotus Europa         8.5393258\nFord Pantera L       2.1182965\nFerrari Dino         3.0225632\nMaserati Bora        1.7857143\nVolvo 142E           3.2715827\n```\n\n\n:::\n:::\n\n\n\n\n#### 4. `arrange()` - Reorder rows\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Sort by mpg (ascending)\narrange(mtcars, mpg)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb\nCadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4\nLincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4\nCamaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4\nDuster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4\nChrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4\nMaserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8\nMerc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3\nAMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2\nDodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2\nFord Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4\nMerc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3\nMerc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3\nMerc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4\nValiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1\nHornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2\nMerc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4\nPontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2\nFerrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6\nMazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4\nHornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1\nVolvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2\nToyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1\nDatsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1\nMerc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2\nMerc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2\nPorsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2\nFiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1\nHonda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2\nLotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2\nFiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1\nToyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1\n```\n\n\n:::\n\n```{.r .cell-code}\n# Sort by mpg (descending)\narrange(mtcars, desc(mpg))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb\nToyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1\nFiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1\nHonda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2\nLotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2\nFiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1\nPorsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2\nMerc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2\nDatsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1\nMerc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2\nToyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1\nHornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1\nVolvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2\nMazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4\nFerrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6\nMerc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4\nPontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2\nHornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2\nValiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1\nMerc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4\nMerc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3\nMerc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3\nFord Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4\nDodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2\nMerc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3\nAMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2\nMaserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8\nChrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4\nDuster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4\nCamaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4\nCadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4\nLincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4\n```\n\n\n:::\n\n```{.r .cell-code}\n# Sort by multiple columns\narrange(mtcars, cyl, desc(mpg))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb\nToyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1\nFiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1\nHonda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2\nLotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2\nFiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1\nPorsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2\nMerc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2\nDatsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1\nMerc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2\nToyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1\nVolvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2\nHornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1\nMazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4\nFerrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6\nMerc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4\nValiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1\nMerc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4\nPontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2\nHornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2\nMerc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3\nMerc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3\nFord Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4\nDodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2\nMerc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3\nAMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2\nMaserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8\nChrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4\nDuster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4\nCamaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4\nCadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4\nLincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4\n```\n\n\n:::\n:::\n\n\n\n\n#### 5. `summarize()` - Collapse rows to summary statistics\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate summary statistics\nsummarize(mtcars,\n          avg_mpg = mean(mpg),\n          max_hp = max(hp),\n          count = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   avg_mpg max_hp count\n1 20.09062    335    32\n```\n\n\n:::\n:::\n\n\n\n\n#### 6. `group_by()` - Group data for operations\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Group by cylinder and calculate statistics per group\nmtcars %>%\n  group_by(cyl) %>%\n  summarize(\n    count = n(),\n    avg_mpg = mean(mpg),\n    avg_hp = mean(hp),\n    .groups = \"drop\"\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 4\n    cyl count avg_mpg avg_hp\n  <dbl> <int>   <dbl>  <dbl>\n1     4    11    26.7   82.6\n2     6     7    19.7  122. \n3     8    14    15.1  209. \n```\n\n\n:::\n:::\n\n\n\n\n### The Pipe Operator (`%>%`)\n\nThe pipe operator makes code more readable by chaining operations:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Without pipes\nresult1 <- filter(mtcars, cyl == 4)\nresult2 <- select(result1, mpg, hp, wt)\nresult3 <- arrange(result2, desc(mpg))\nresult3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                mpg  hp    wt\nToyota Corolla 33.9  65 1.835\nFiat 128       32.4  66 2.200\nHonda Civic    30.4  52 1.615\nLotus Europa   30.4 113 1.513\nFiat X1-9      27.3  66 1.935\nPorsche 914-2  26.0  91 2.140\nMerc 240D      24.4  62 3.190\nDatsun 710     22.8  93 2.320\nMerc 230       22.8  95 3.150\nToyota Corona  21.5  97 2.465\nVolvo 142E     21.4 109 2.780\n```\n\n\n:::\n\n```{.r .cell-code}\n# With pipes - same operations, more readable\nmtcars %>%\n  filter(cyl == 4) %>%\n  select(mpg, hp, wt) %>%\n  arrange(desc(mpg))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                mpg  hp    wt\nToyota Corolla 33.9  65 1.835\nFiat 128       32.4  66 2.200\nHonda Civic    30.4  52 1.615\nLotus Europa   30.4 113 1.513\nFiat X1-9      27.3  66 1.935\nPorsche 914-2  26.0  91 2.140\nMerc 240D      24.4  62 3.190\nDatsun 710     22.8  93 2.320\nMerc 230       22.8  95 3.150\nToyota Corona  21.5  97 2.465\nVolvo 142E     21.4 109 2.780\n```\n\n\n:::\n:::\n\n\n\n\n### More Useful dplyr Functions\n\n#### `distinct()` - Get unique rows\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get unique values of cyl and gear\nmtcars %>%\n  select(cyl, gear) %>%\n  distinct()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                  cyl gear\nMazda RX4           6    4\nDatsun 710          4    4\nHornet 4 Drive      6    3\nHornet Sportabout   8    3\nToyota Corona       4    3\nPorsche 914-2       4    5\nFord Pantera L      8    5\nFerrari Dino        6    5\n```\n\n\n:::\n:::\n\n\n\n\n#### `count()` - Count occurrences\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Count cars by cylinder\nmtcars %>%\n  count(cyl, sort = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  cyl  n\n1   8 14\n2   4 11\n3   6  7\n```\n\n\n:::\n\n```{.r .cell-code}\n# Count by multiple variables\nmtcars %>%\n  count(cyl, gear)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  cyl gear  n\n1   4    3  1\n2   4    4  8\n3   4    5  2\n4   6    3  2\n5   6    4  4\n6   6    5  1\n7   8    3 12\n8   8    5  2\n```\n\n\n:::\n:::\n\n\n\n\n#### `slice()` - Select rows by position\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Select first 5 rows\nmtcars %>%\n  slice(1:5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\n```\n\n\n:::\n\n```{.r .cell-code}\n# Select top 3 rows by mpg\nmtcars %>%\n  arrange(desc(mpg)) %>%\n  slice(1:3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                mpg cyl disp hp drat    wt  qsec vs am gear carb\nToyota Corolla 33.9   4 71.1 65 4.22 1.835 19.90  1  1    4    1\nFiat 128       32.4   4 78.7 66 4.08 2.200 19.47  1  1    4    1\nHonda Civic    30.4   4 75.7 52 4.93 1.615 18.52  1  1    4    2\n```\n\n\n:::\n:::\n\n\n\n\n#### `pull()` - Extract a column as a vector\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Extract mpg column as a vector\nmtcars %>%\n  pull(mpg)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 21.0 21.0 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 17.8 16.4 17.3 15.2 10.4\n[16] 10.4 14.7 32.4 30.4 33.9 21.5 15.5 15.2 13.3 19.2 27.3 26.0 30.4 15.8 19.7\n[31] 15.0 21.4\n```\n\n\n:::\n:::\n\n\n\n\n### Combining Multiple Operations\n\nLet's solve a more complex problem by combining multiple dplyr functions:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# First add rownames as a column\ncars_with_names <- mtcars %>%\n  tibble::rownames_to_column(\"model\")\n\n# Now perform the analysis\ncars_with_names %>%\n  group_by(cyl) %>%\n  filter(mpg == max(mpg)) %>%\n  select(cyl, model, mpg, hp) %>%\n  arrange(cyl) %>%\n  ungroup()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 4\n    cyl model              mpg    hp\n  <dbl> <chr>            <dbl> <dbl>\n1     4 Toyota Corolla    33.9    65\n2     6 Hornet 4 Drive    21.4   110\n3     8 Pontiac Firebird  19.2   175\n```\n\n\n:::\n:::\n\n\n\n\n### Working with Joins\n\ndplyr provides functions for joining datasets:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create sample datasets\nmanufacturers <- data.frame(\n  make = c(\"Honda\", \"Toyota\", \"Ford\", \"BMW\", \"Mercedes\"),\n  country = c(\"Japan\", \"Japan\", \"USA\", \"Germany\", \"Germany\"),\n  stringsAsFactors = FALSE\n)\n\ncars <- data.frame(\n  model = c(\"Civic\", \"Corolla\", \"Focus\", \"3 Series\", \"Fiesta\"),\n  make = c(\"Honda\", \"Toyota\", \"Ford\", \"BMW\", \"Ford\"),\n  stringsAsFactors = FALSE\n)\n\n# Inner join - only matching rows\ninner_join(cars, manufacturers, by = \"make\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     model   make country\n1    Civic  Honda   Japan\n2  Corolla Toyota   Japan\n3    Focus   Ford     USA\n4 3 Series    BMW Germany\n5   Fiesta   Ford     USA\n```\n\n\n:::\n\n```{.r .cell-code}\n# Left join - all rows from cars\nleft_join(cars, manufacturers, by = \"make\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     model   make country\n1    Civic  Honda   Japan\n2  Corolla Toyota   Japan\n3    Focus   Ford     USA\n4 3 Series    BMW Germany\n5   Fiesta   Ford     USA\n```\n\n\n:::\n\n```{.r .cell-code}\n# Full join - all rows from both\nfull_join(cars, manufacturers, by = \"make\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     model     make country\n1    Civic    Honda   Japan\n2  Corolla   Toyota   Japan\n3    Focus     Ford     USA\n4 3 Series      BMW Germany\n5   Fiesta     Ford     USA\n6     <NA> Mercedes Germany\n```\n\n\n:::\n:::\n\n\n\n\ndplyr makes data manipulation in R more intuitive and efficient. Its consistent syntax and the pipe operator allow you to write code that's both powerful and readable.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
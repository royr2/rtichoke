{"title":"Introduction to R for Analytics","markdown":{"yaml":{"title":"Introduction to R for Analytics","date":"2023-03-22","categories":["R","Analytics","Introduction"],"image":"../images/r-logo.png","execute":{"echo":true,"warning":false,"message":false,"eval":true}},"headingText":"Exploring a Dataset","containsRefs":false,"markdown":"\n\nR is a powerful language specifically designed for data analysis and visualization. This guide demonstrates practical examples of using R for real-world analytics tasks.\n\n\nR comes with several built-in datasets perfect for practice. This example examines the `mtcars` dataset:\n\n```{r}\n# View the first few rows\nhead(mtcars)\n\n# Quick summary of the dataset structure\nstr(mtcars)\n\n# Statistical summary of key variables\nsummary(mtcars[, c(\"mpg\", \"wt\", \"hp\")])\n```\n\nThe `mtcars` dataset contains information about 32 cars from Motor Trend magazine, including fuel efficiency (mpg), weight (wt), and horsepower (hp).\n\n## Data Visualization\n\nVisualization is essential for understanding patterns in data. The following examples create informative plots:\n\n```{r}\n#| label: basic-visualizations\n#| fig-width: 10\n#| fig-height: 8\n\nlibrary(ggplot2)\n\n# 1. A scatter plot with regression line\np1 <- ggplot(mtcars, aes(x = wt, y = mpg)) +\n  geom_point(aes(size = hp, color = factor(cyl)), alpha = 0.7) +\n  geom_smooth(method = \"lm\", formula = y ~ x, color = \"#2c3e50\") +\n  labs(title = \"Car Weight vs. Fuel Efficiency\",\n       subtitle = \"Size represents horsepower, color represents cylinders\",\n       x = \"Weight (1000 lbs)\",\n       y = \"Miles Per Gallon\") +\n  theme_minimal() +\n  scale_color_brewer(palette = \"Set1\", name = \"Cylinders\")\n\n# 2. Distribution of fuel efficiency\np2 <- ggplot(mtcars, aes(x = mpg, fill = factor(cyl))) +\n  geom_histogram(bins = 10, alpha = 0.7, position = \"identity\") +\n  labs(title = \"Distribution of Fuel Efficiency\",\n       x = \"Miles Per Gallon\",\n       y = \"Count\") +\n  scale_fill_brewer(palette = \"Set1\", name = \"Cylinders\") +\n  theme_minimal()\n\n# Display plots (if using patchwork)\nlibrary(patchwork)\np1 / p2\n```\n\nThese visualizations reveal:\n\n-   A clear negative correlation between car weight and fuel efficiency\n-   Higher cylinder cars tend to be heavier with lower MPG\n-   The MPG distribution varies significantly by cylinder count\n\n## Data Transformation\n\nData rarely comes in the exact format needed. The `dplyr` package makes transformations straightforward:\n\n```{r}\n#| label: data-transformations\n\n# Load required packages\nlibrary(dplyr)\nlibrary(tibble)  # For rownames_to_column function\n\n# Create an enhanced version of the dataset\nmtcars_enhanced <- mtcars %>%\n  # Add car names as a column (they're currently row names)\n  rownames_to_column(\"car_name\") %>%\n  # Create useful derived metrics\n  mutate(\n    # Efficiency ratio (higher is better)\n    efficiency_ratio = mpg / wt,\n    \n    # Power-to-weight ratio (higher is better)\n    power_to_weight = hp / wt,\n    \n    # Categorize cars by efficiency\n    efficiency_category = case_when(\n      mpg > 25 ~ \"High Efficiency\",\n      mpg > 15 ~ \"Medium Efficiency\",\n      TRUE ~ \"Low Efficiency\"\n    )\n  ) %>%\n  # Arrange from most to least efficient\n  arrange(desc(efficiency_ratio))\n\n# Display the top 5 most efficient cars\nhead(mtcars_enhanced[, c(\"car_name\", \"mpg\", \"wt\", \"hp\", \"efficiency_ratio\", \"efficiency_category\")], 5)\n```\n\n## Answering Business Questions with Data\n\nThe enhanced dataset can be used to answer practical questions:\n\n```{r}\n#| label: business-analysis\n\n# Question 1: What are the average characteristics by cylinder count?\ncylinder_analysis <- mtcars_enhanced %>%\n  group_by(cyl) %>%\n  summarize(\n    count = n(),\n    avg_mpg = mean(mpg),\n    avg_weight = mean(wt),\n    avg_horsepower = mean(hp),\n    avg_efficiency_ratio = mean(efficiency_ratio),\n    avg_power_to_weight = mean(power_to_weight)\n  ) %>%\n  arrange(cyl)\n\n# Display the results\ncylinder_analysis\n\n# Question 2: Which transmission type is more fuel efficient?\ntransmission_efficiency <- mtcars_enhanced %>%\n  # am: 0 = automatic, 1 = manual\n  mutate(transmission = if_else(am == 1, \"Manual\", \"Automatic\")) %>%\n  group_by(transmission) %>%\n  summarize(\n    count = n(),\n    avg_mpg = mean(mpg),\n    median_mpg = median(mpg),\n    mpg_std_dev = sd(mpg)\n  )\n\n# Display the results\ntransmission_efficiency\n\n# Visualize the difference\nggplot(mtcars, aes(x = factor(am, labels = c(\"Automatic\", \"Manual\")), y = mpg, fill = factor(am))) +\n  geom_boxplot(alpha = 0.7) +\n  geom_jitter(width = 0.1, alpha = 0.5) +\n  labs(title = \"Fuel Efficiency by Transmission Type\",\n       x = \"Transmission Type\",\n       y = \"Miles Per Gallon\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n\n## Correlation Analysis for Decision Making\n\nUnderstanding relationships between variables is crucial for business decisions:\n\n```{r}\n#| label: correlation-analysis\n#| fig-width: 9\n#| fig-height: 7\n\n# Calculate correlations\ncor_matrix <- cor(mtcars[, c(\"mpg\", \"wt\", \"hp\", \"disp\", \"qsec\")])\ncor_df <- round(cor_matrix, 2)\n\n# Display correlation matrix\ncor_df\n\n# Visualize correlations (requires the corrplot package)\nlibrary(corrplot)\ncorrplot(cor_matrix, method = \"circle\", type = \"upper\", \n         tl.col = \"black\", tl.srt = 45, addCoef.col = \"black\")\n\n# Scatter plot matrix of key variables\npairs(mtcars[, c(\"mpg\", \"wt\", \"hp\", \"disp\")], \n      main = \"Scatter Plot Matrix of Key Variables\",\n      pch = 21, bg = \"lightblue\", cex = 1.2)\n```\n\n## Working with Real-World Datasets\n\nThe famous Iris dataset demonstrates a complete workflow:\n\n```{r}\n#| label: iris-analysis\n#| fig-width: 10\n#| fig-height: 8\n\n# Load packages\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(ggplot2)\n\n# Examine the dataset\nhead(iris)\nstr(iris)\n\n# Calculate summary statistics by species\niris_stats <- iris %>%\n  group_by(Species) %>%\n  summarize(across(where(is.numeric), \n                   list(mean = mean, \n                        median = median,\n                        sd = sd,\n                        min = min,\n                        max = max)))\n\n# View summary for Sepal.Length\niris_stats %>% select(Species, starts_with(\"Sepal.Length\"))\n\n# Create a visualization comparing all measurements across species\niris_long <- iris %>%\n  pivot_longer(\n    cols = -Species,\n    names_to = \"Measurement\",\n    values_to = \"Value\"\n  )\n\n# Box plots with data points\nggplot(iris_long, aes(x = Species, y = Value, fill = Species)) +\n  geom_boxplot(alpha = 0.6) +\n  geom_jitter(width = 0.15, alpha = 0.5, color = \"darkgrey\") +\n  facet_wrap(~Measurement, scales = \"free_y\") +\n  labs(title = \"Iris Measurements Across Species\",\n       subtitle = \"Box plots with individual observations\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n\n# Find the most distinguishing features between species\niris_wide <- iris %>%\n  pivot_longer(cols = -Species, names_to = \"Measurement\", values_to = \"Value\") %>%\n  group_by(Measurement, Species) %>%\n  summarise(mean_value = mean(Value), .groups = \"drop\") %>%\n  pivot_wider(names_from = Species, values_from = mean_value) %>%\n  mutate(versicolor_vs_setosa = abs(versicolor - setosa),\n         virginica_vs_setosa = abs(virginica - setosa),\n         virginica_vs_versicolor = abs(virginica - versicolor),\n         max_difference = pmax(versicolor_vs_setosa, virginica_vs_setosa, virginica_vs_versicolor))\n\n# Display the results ordered by maximum difference\niris_wide %>% arrange(desc(max_difference))\n```\n\n## Handling Missing Data\n\nMissing data is a common challenge. This practical example demonstrates handling techniques:\n\n```{r}\n#| label: missing-data-analysis\n\n# Create a simulated customer dataset with missing values\nset.seed(123) # For reproducibility\n\ncustomers <- data.frame(\n  customer_id = 1:100,\n  age = sample(18:70, 100, replace = TRUE),\n  income = round(rnorm(100, 50000, 15000)),\n  years_as_customer = sample(0:20, 100, replace = TRUE),\n  purchase_frequency = sample(1:10, 100, replace = TRUE)\n)\n\n# Introduce missing values randomly\nset.seed(456)\ncustomers$age[sample(1:100, 10)] <- NA\ncustomers$income[sample(1:100, 15)] <- NA\ncustomers$purchase_frequency[sample(1:100, 5)] <- NA\n\n# 1. Identify missing data\nmissing_summary <- sapply(customers, function(x) sum(is.na(x)))\nmissing_summary\n\n# 2. Visualize the pattern of missing data\nlibrary(naniar) # May need to install this package\nvis_miss(customers)\n\n# 3. Handle missing data with multiple approaches\n\n# Option A: Remove rows with any missing values\nclean_customers <- na.omit(customers)\nnrow(customers) - nrow(clean_customers) # Number of rows removed\n\n# Option B: Impute with mean/median (numeric variables only)\nimputed_customers <- customers %>%\n  mutate(\n    age = ifelse(is.na(age), median(age, na.rm = TRUE), age),\n    income = ifelse(is.na(income), mean(income, na.rm = TRUE), income),\n    purchase_frequency = ifelse(is.na(purchase_frequency), \n                               median(purchase_frequency, na.rm = TRUE), \n                               purchase_frequency)\n  )\n\n# Option C: Predictive imputation (using age to predict income)\nlibrary(mice) # For more sophisticated imputation\n# Quick imputation model - in practice more parameters would be used\nimputed_data <- mice(customers, m = 5, method = \"pmm\", printFlag = FALSE)\ncustomers_complete <- complete(imputed_data)\n\n# Compare results by calculating customer value score\ncalculate_value <- function(df) {\n  df %>%\n    mutate(customer_value = (income/10000) * (purchase_frequency/10) * log(years_as_customer + 1)) %>%\n    arrange(desc(customer_value)) %>%\n    select(customer_id, customer_value, everything())\n}\n\n# Top 5 customers by value (original with NAs removed)\nhead(calculate_value(clean_customers), 5)\n\n# Top 5 customers by value (with imputed values)\nhead(calculate_value(customers_complete), 5)\n```\n\n## Time Series Analysis for Business Trends\n\nTime series analysis is essential for understanding business trends and forecasting:\n\n```{r}\n#| label: time-series-analysis\n#| fig-width: 10\n#| fig-height: 6\n\n# Load packages\nlibrary(forecast)\nlibrary(tseries)\n\n# Examine the built-in AirPassengers dataset (monthly air passengers from 1949 to 1960)\ndata(AirPassengers)\nclass(AirPassengers)\n\n# Plot the time series\nautoplots <- autoplot(AirPassengers) +\n  labs(title = \"Monthly Air Passengers (1949-1960)\",\n       y = \"Passenger Count\",\n       x = \"Year\") +\n  theme_minimal()\n\n# Decompose the time series into seasonal components\ndecomposed <- decompose(AirPassengers, \"multiplicative\")\nautoplot(decomposed) +\n  labs(title = \"Decomposition of Air Passengers Time Series\") +\n  theme_minimal()\n\n# Forecasting future values using auto.arima\nfit <- auto.arima(AirPassengers)\nforecasts <- forecast(fit, h = 24) # Forecast 2 years ahead\n\n# Plot the forecasts\nplot(forecasts, \n     main = \"Air Passengers Forecast (24 months)\",\n     xlab = \"Year\", \n     ylab = \"Passenger Count\")\n\n# Summary of the forecast model\nsummary(fit)\n```\n","srcMarkdownNoYaml":"\n\nR is a powerful language specifically designed for data analysis and visualization. This guide demonstrates practical examples of using R for real-world analytics tasks.\n\n## Exploring a Dataset\n\nR comes with several built-in datasets perfect for practice. This example examines the `mtcars` dataset:\n\n```{r}\n# View the first few rows\nhead(mtcars)\n\n# Quick summary of the dataset structure\nstr(mtcars)\n\n# Statistical summary of key variables\nsummary(mtcars[, c(\"mpg\", \"wt\", \"hp\")])\n```\n\nThe `mtcars` dataset contains information about 32 cars from Motor Trend magazine, including fuel efficiency (mpg), weight (wt), and horsepower (hp).\n\n## Data Visualization\n\nVisualization is essential for understanding patterns in data. The following examples create informative plots:\n\n```{r}\n#| label: basic-visualizations\n#| fig-width: 10\n#| fig-height: 8\n\nlibrary(ggplot2)\n\n# 1. A scatter plot with regression line\np1 <- ggplot(mtcars, aes(x = wt, y = mpg)) +\n  geom_point(aes(size = hp, color = factor(cyl)), alpha = 0.7) +\n  geom_smooth(method = \"lm\", formula = y ~ x, color = \"#2c3e50\") +\n  labs(title = \"Car Weight vs. Fuel Efficiency\",\n       subtitle = \"Size represents horsepower, color represents cylinders\",\n       x = \"Weight (1000 lbs)\",\n       y = \"Miles Per Gallon\") +\n  theme_minimal() +\n  scale_color_brewer(palette = \"Set1\", name = \"Cylinders\")\n\n# 2. Distribution of fuel efficiency\np2 <- ggplot(mtcars, aes(x = mpg, fill = factor(cyl))) +\n  geom_histogram(bins = 10, alpha = 0.7, position = \"identity\") +\n  labs(title = \"Distribution of Fuel Efficiency\",\n       x = \"Miles Per Gallon\",\n       y = \"Count\") +\n  scale_fill_brewer(palette = \"Set1\", name = \"Cylinders\") +\n  theme_minimal()\n\n# Display plots (if using patchwork)\nlibrary(patchwork)\np1 / p2\n```\n\nThese visualizations reveal:\n\n-   A clear negative correlation between car weight and fuel efficiency\n-   Higher cylinder cars tend to be heavier with lower MPG\n-   The MPG distribution varies significantly by cylinder count\n\n## Data Transformation\n\nData rarely comes in the exact format needed. The `dplyr` package makes transformations straightforward:\n\n```{r}\n#| label: data-transformations\n\n# Load required packages\nlibrary(dplyr)\nlibrary(tibble)  # For rownames_to_column function\n\n# Create an enhanced version of the dataset\nmtcars_enhanced <- mtcars %>%\n  # Add car names as a column (they're currently row names)\n  rownames_to_column(\"car_name\") %>%\n  # Create useful derived metrics\n  mutate(\n    # Efficiency ratio (higher is better)\n    efficiency_ratio = mpg / wt,\n    \n    # Power-to-weight ratio (higher is better)\n    power_to_weight = hp / wt,\n    \n    # Categorize cars by efficiency\n    efficiency_category = case_when(\n      mpg > 25 ~ \"High Efficiency\",\n      mpg > 15 ~ \"Medium Efficiency\",\n      TRUE ~ \"Low Efficiency\"\n    )\n  ) %>%\n  # Arrange from most to least efficient\n  arrange(desc(efficiency_ratio))\n\n# Display the top 5 most efficient cars\nhead(mtcars_enhanced[, c(\"car_name\", \"mpg\", \"wt\", \"hp\", \"efficiency_ratio\", \"efficiency_category\")], 5)\n```\n\n## Answering Business Questions with Data\n\nThe enhanced dataset can be used to answer practical questions:\n\n```{r}\n#| label: business-analysis\n\n# Question 1: What are the average characteristics by cylinder count?\ncylinder_analysis <- mtcars_enhanced %>%\n  group_by(cyl) %>%\n  summarize(\n    count = n(),\n    avg_mpg = mean(mpg),\n    avg_weight = mean(wt),\n    avg_horsepower = mean(hp),\n    avg_efficiency_ratio = mean(efficiency_ratio),\n    avg_power_to_weight = mean(power_to_weight)\n  ) %>%\n  arrange(cyl)\n\n# Display the results\ncylinder_analysis\n\n# Question 2: Which transmission type is more fuel efficient?\ntransmission_efficiency <- mtcars_enhanced %>%\n  # am: 0 = automatic, 1 = manual\n  mutate(transmission = if_else(am == 1, \"Manual\", \"Automatic\")) %>%\n  group_by(transmission) %>%\n  summarize(\n    count = n(),\n    avg_mpg = mean(mpg),\n    median_mpg = median(mpg),\n    mpg_std_dev = sd(mpg)\n  )\n\n# Display the results\ntransmission_efficiency\n\n# Visualize the difference\nggplot(mtcars, aes(x = factor(am, labels = c(\"Automatic\", \"Manual\")), y = mpg, fill = factor(am))) +\n  geom_boxplot(alpha = 0.7) +\n  geom_jitter(width = 0.1, alpha = 0.5) +\n  labs(title = \"Fuel Efficiency by Transmission Type\",\n       x = \"Transmission Type\",\n       y = \"Miles Per Gallon\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n\n## Correlation Analysis for Decision Making\n\nUnderstanding relationships between variables is crucial for business decisions:\n\n```{r}\n#| label: correlation-analysis\n#| fig-width: 9\n#| fig-height: 7\n\n# Calculate correlations\ncor_matrix <- cor(mtcars[, c(\"mpg\", \"wt\", \"hp\", \"disp\", \"qsec\")])\ncor_df <- round(cor_matrix, 2)\n\n# Display correlation matrix\ncor_df\n\n# Visualize correlations (requires the corrplot package)\nlibrary(corrplot)\ncorrplot(cor_matrix, method = \"circle\", type = \"upper\", \n         tl.col = \"black\", tl.srt = 45, addCoef.col = \"black\")\n\n# Scatter plot matrix of key variables\npairs(mtcars[, c(\"mpg\", \"wt\", \"hp\", \"disp\")], \n      main = \"Scatter Plot Matrix of Key Variables\",\n      pch = 21, bg = \"lightblue\", cex = 1.2)\n```\n\n## Working with Real-World Datasets\n\nThe famous Iris dataset demonstrates a complete workflow:\n\n```{r}\n#| label: iris-analysis\n#| fig-width: 10\n#| fig-height: 8\n\n# Load packages\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(ggplot2)\n\n# Examine the dataset\nhead(iris)\nstr(iris)\n\n# Calculate summary statistics by species\niris_stats <- iris %>%\n  group_by(Species) %>%\n  summarize(across(where(is.numeric), \n                   list(mean = mean, \n                        median = median,\n                        sd = sd,\n                        min = min,\n                        max = max)))\n\n# View summary for Sepal.Length\niris_stats %>% select(Species, starts_with(\"Sepal.Length\"))\n\n# Create a visualization comparing all measurements across species\niris_long <- iris %>%\n  pivot_longer(\n    cols = -Species,\n    names_to = \"Measurement\",\n    values_to = \"Value\"\n  )\n\n# Box plots with data points\nggplot(iris_long, aes(x = Species, y = Value, fill = Species)) +\n  geom_boxplot(alpha = 0.6) +\n  geom_jitter(width = 0.15, alpha = 0.5, color = \"darkgrey\") +\n  facet_wrap(~Measurement, scales = \"free_y\") +\n  labs(title = \"Iris Measurements Across Species\",\n       subtitle = \"Box plots with individual observations\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n\n# Find the most distinguishing features between species\niris_wide <- iris %>%\n  pivot_longer(cols = -Species, names_to = \"Measurement\", values_to = \"Value\") %>%\n  group_by(Measurement, Species) %>%\n  summarise(mean_value = mean(Value), .groups = \"drop\") %>%\n  pivot_wider(names_from = Species, values_from = mean_value) %>%\n  mutate(versicolor_vs_setosa = abs(versicolor - setosa),\n         virginica_vs_setosa = abs(virginica - setosa),\n         virginica_vs_versicolor = abs(virginica - versicolor),\n         max_difference = pmax(versicolor_vs_setosa, virginica_vs_setosa, virginica_vs_versicolor))\n\n# Display the results ordered by maximum difference\niris_wide %>% arrange(desc(max_difference))\n```\n\n## Handling Missing Data\n\nMissing data is a common challenge. This practical example demonstrates handling techniques:\n\n```{r}\n#| label: missing-data-analysis\n\n# Create a simulated customer dataset with missing values\nset.seed(123) # For reproducibility\n\ncustomers <- data.frame(\n  customer_id = 1:100,\n  age = sample(18:70, 100, replace = TRUE),\n  income = round(rnorm(100, 50000, 15000)),\n  years_as_customer = sample(0:20, 100, replace = TRUE),\n  purchase_frequency = sample(1:10, 100, replace = TRUE)\n)\n\n# Introduce missing values randomly\nset.seed(456)\ncustomers$age[sample(1:100, 10)] <- NA\ncustomers$income[sample(1:100, 15)] <- NA\ncustomers$purchase_frequency[sample(1:100, 5)] <- NA\n\n# 1. Identify missing data\nmissing_summary <- sapply(customers, function(x) sum(is.na(x)))\nmissing_summary\n\n# 2. Visualize the pattern of missing data\nlibrary(naniar) # May need to install this package\nvis_miss(customers)\n\n# 3. Handle missing data with multiple approaches\n\n# Option A: Remove rows with any missing values\nclean_customers <- na.omit(customers)\nnrow(customers) - nrow(clean_customers) # Number of rows removed\n\n# Option B: Impute with mean/median (numeric variables only)\nimputed_customers <- customers %>%\n  mutate(\n    age = ifelse(is.na(age), median(age, na.rm = TRUE), age),\n    income = ifelse(is.na(income), mean(income, na.rm = TRUE), income),\n    purchase_frequency = ifelse(is.na(purchase_frequency), \n                               median(purchase_frequency, na.rm = TRUE), \n                               purchase_frequency)\n  )\n\n# Option C: Predictive imputation (using age to predict income)\nlibrary(mice) # For more sophisticated imputation\n# Quick imputation model - in practice more parameters would be used\nimputed_data <- mice(customers, m = 5, method = \"pmm\", printFlag = FALSE)\ncustomers_complete <- complete(imputed_data)\n\n# Compare results by calculating customer value score\ncalculate_value <- function(df) {\n  df %>%\n    mutate(customer_value = (income/10000) * (purchase_frequency/10) * log(years_as_customer + 1)) %>%\n    arrange(desc(customer_value)) %>%\n    select(customer_id, customer_value, everything())\n}\n\n# Top 5 customers by value (original with NAs removed)\nhead(calculate_value(clean_customers), 5)\n\n# Top 5 customers by value (with imputed values)\nhead(calculate_value(customers_complete), 5)\n```\n\n## Time Series Analysis for Business Trends\n\nTime series analysis is essential for understanding business trends and forecasting:\n\n```{r}\n#| label: time-series-analysis\n#| fig-width: 10\n#| fig-height: 6\n\n# Load packages\nlibrary(forecast)\nlibrary(tseries)\n\n# Examine the built-in AirPassengers dataset (monthly air passengers from 1949 to 1960)\ndata(AirPassengers)\nclass(AirPassengers)\n\n# Plot the time series\nautoplots <- autoplot(AirPassengers) +\n  labs(title = \"Monthly Air Passengers (1949-1960)\",\n       y = \"Passenger Count\",\n       x = \"Year\") +\n  theme_minimal()\n\n# Decompose the time series into seasonal components\ndecomposed <- decompose(AirPassengers, \"multiplicative\")\nautoplot(decomposed) +\n  labs(title = \"Decomposition of Air Passengers Time Series\") +\n  theme_minimal()\n\n# Forecasting future values using auto.arima\nfit <- auto.arima(AirPassengers)\nforecasts <- forecast(fit, h = 24) # Forecast 2 years ahead\n\n# Plot the forecasts\nplot(forecasts, \n     main = \"Air Passengers Forecast (24 months)\",\n     xlab = \"Year\", \n     ylab = \"Passenger Count\")\n\n# Summary of the forecast model\nsummary(fit)\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","highlight-style":"zenburn","toc":true,"css":["../styles.css"],"output-file":"intro-to-r-analytics.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"sketchy","code-copy":true,"title":"Introduction to R for Analytics","date":"2023-03-22","categories":["R","Analytics","Introduction"],"image":"../images/r-logo.png"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}
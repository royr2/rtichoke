{"title":"Indexing Arrays in R","markdown":{"yaml":{"title":"Indexing Arrays in R","description":"Learn how to access and manipulate elements in vectors, matrices, and arrays in R","date":"2025-03-30","categories":["basics","r-programming"],"image":"https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/RStudio.png","execute":{"echo":true,"warning":false,"message":false,"eval":true}},"headingText":"Vector Indexing","containsRefs":false,"markdown":"\n\nR provides flexible ways to access and manipulate elements in data structures like vectors, matrices, and arrays.\n\n\nVectors are one-dimensional arrays and the most basic data structure in R:\n\n```{r}\n# Create a vector\nx <- c(10, 20, 30, 40, 50)\n\n# Access by position (indexing starts at 1, not 0)\nx[1]        # First element\nx[3]        # Third element\nx[length(x)] # Last element\n\n# Access multiple elements\nx[c(1, 3, 5)]  # First, third, and fifth elements\nx[1:3]         # First three elements\n\n# Negative indices exclude elements\nx[-2]          # All elements except the second\nx[-(3:5)]      # All elements except third through fifth\n```\n\n### Logical Indexing\n\nLogical vectors can be used to filter elements:\n\n```{r}\n# Create a vector\nages <- c(25, 18, 45, 32, 16, 50)\n\n# Filter using logical conditions\nages[ages > 30]         # Elements greater than 30\nages[ages >= 18 & ages <= 40]  # Elements between 18 and 40\n\n# Named logical operations\nadults <- ages >= 18\nages[adults]            # Only adult ages\n```\n\n### Matrix Indexing\n\nMatrices are two-dimensional arrays:\n\n```{r}\n# Create a matrix\nmat <- matrix(1:12, nrow = 3, ncol = 4)\nprint(mat)\n\n# Access by row and column indices\nmat[1, 2]      # Element at first row, second column\nmat[2, ]       # Entire second row\nmat[, 3]       # Entire third column\nmat[1:2, 3:4]  # Submatrix (rows 1-2, columns 3-4)\n\n# Logical indexing in matrices\nmat[mat > 6]   # All elements greater than 6\n```\n\n### Array Indexing\n\nArrays can have more than two dimensions:\n\n```{r}\n# Create a 3D array (2x3x2)\narr <- array(1:12, dim = c(2, 3, 2))\nprint(arr)\n\n# Access elements\narr[1, 2, 1]   # Element at position [1,2,1]\narr[, , 1]     # First \"layer\" of the array\narr[1, , ]     # All elements in first row across all layers\n```\n\n### Data Frame Indexing\n\nData frames combine features of matrices and lists:\n\n```{r}\n# Create a data frame\ndf <- data.frame(\n  name = c(\"Alice\", \"Bob\", \"Charlie\", \"David\"),\n  age = c(25, 30, 35, 40),\n  score = c(88, 92, 79, 94)\n)\nprint(df)\n\n# Access by row and column indices (like matrices)\ndf[1, 2]       # First row, second column\ndf[2:3, ]      # Second and third rows\n\n# Access by column name\ndf$name        # Name column\ndf[, \"age\"]    # Age column\ndf[[\"score\"]]  # Score column\n\n# Filter rows by condition\ndf[df$age > 30, ]  # Rows where age is greater than 30\n```\n\n### List Indexing\n\nLists can contain elements of different types:\n\n```{r}\n# Create a list\nmy_list <- list(\n  name = \"John\",\n  numbers = c(1, 2, 3),\n  matrix = matrix(1:4, nrow = 2)\n)\nprint(my_list)\n\n# Access list elements\nmy_list[[1]]       # First element (by position)\nmy_list[[\"name\"]]  # Element by name\nmy_list$numbers    # Element by name using $ notation\n\n# Access nested elements\nmy_list$numbers[2]  # Second element of the numbers vector\nmy_list$matrix[1,2] # Element at row 1, column 2 of the matrix\n```\n\n### Advanced Indexing Techniques\n\n```{r}\n# Using which() for positional indexing from logical conditions\nx <- c(5, 10, 15, 20, 25)\nwhich(x > 15)  # Returns positions where condition is TRUE\n\n# Using %in% for membership tests\nfruits <- c(\"apple\", \"banana\", \"cherry\", \"date\")\nfruits %in% c(\"banana\", \"date\", \"fig\")  # Tests which elements are in the second vector\nfruits[fruits %in% c(\"banana\", \"date\", \"fig\")]  # Select matching elements\n```\n\nRemember that R indexing starts at 1, not 0 as in many other programming languages.","srcMarkdownNoYaml":"\n\nR provides flexible ways to access and manipulate elements in data structures like vectors, matrices, and arrays.\n\n### Vector Indexing\n\nVectors are one-dimensional arrays and the most basic data structure in R:\n\n```{r}\n# Create a vector\nx <- c(10, 20, 30, 40, 50)\n\n# Access by position (indexing starts at 1, not 0)\nx[1]        # First element\nx[3]        # Third element\nx[length(x)] # Last element\n\n# Access multiple elements\nx[c(1, 3, 5)]  # First, third, and fifth elements\nx[1:3]         # First three elements\n\n# Negative indices exclude elements\nx[-2]          # All elements except the second\nx[-(3:5)]      # All elements except third through fifth\n```\n\n### Logical Indexing\n\nLogical vectors can be used to filter elements:\n\n```{r}\n# Create a vector\nages <- c(25, 18, 45, 32, 16, 50)\n\n# Filter using logical conditions\nages[ages > 30]         # Elements greater than 30\nages[ages >= 18 & ages <= 40]  # Elements between 18 and 40\n\n# Named logical operations\nadults <- ages >= 18\nages[adults]            # Only adult ages\n```\n\n### Matrix Indexing\n\nMatrices are two-dimensional arrays:\n\n```{r}\n# Create a matrix\nmat <- matrix(1:12, nrow = 3, ncol = 4)\nprint(mat)\n\n# Access by row and column indices\nmat[1, 2]      # Element at first row, second column\nmat[2, ]       # Entire second row\nmat[, 3]       # Entire third column\nmat[1:2, 3:4]  # Submatrix (rows 1-2, columns 3-4)\n\n# Logical indexing in matrices\nmat[mat > 6]   # All elements greater than 6\n```\n\n### Array Indexing\n\nArrays can have more than two dimensions:\n\n```{r}\n# Create a 3D array (2x3x2)\narr <- array(1:12, dim = c(2, 3, 2))\nprint(arr)\n\n# Access elements\narr[1, 2, 1]   # Element at position [1,2,1]\narr[, , 1]     # First \"layer\" of the array\narr[1, , ]     # All elements in first row across all layers\n```\n\n### Data Frame Indexing\n\nData frames combine features of matrices and lists:\n\n```{r}\n# Create a data frame\ndf <- data.frame(\n  name = c(\"Alice\", \"Bob\", \"Charlie\", \"David\"),\n  age = c(25, 30, 35, 40),\n  score = c(88, 92, 79, 94)\n)\nprint(df)\n\n# Access by row and column indices (like matrices)\ndf[1, 2]       # First row, second column\ndf[2:3, ]      # Second and third rows\n\n# Access by column name\ndf$name        # Name column\ndf[, \"age\"]    # Age column\ndf[[\"score\"]]  # Score column\n\n# Filter rows by condition\ndf[df$age > 30, ]  # Rows where age is greater than 30\n```\n\n### List Indexing\n\nLists can contain elements of different types:\n\n```{r}\n# Create a list\nmy_list <- list(\n  name = \"John\",\n  numbers = c(1, 2, 3),\n  matrix = matrix(1:4, nrow = 2)\n)\nprint(my_list)\n\n# Access list elements\nmy_list[[1]]       # First element (by position)\nmy_list[[\"name\"]]  # Element by name\nmy_list$numbers    # Element by name using $ notation\n\n# Access nested elements\nmy_list$numbers[2]  # Second element of the numbers vector\nmy_list$matrix[1,2] # Element at row 1, column 2 of the matrix\n```\n\n### Advanced Indexing Techniques\n\n```{r}\n# Using which() for positional indexing from logical conditions\nx <- c(5, 10, 15, 20, 25)\nwhich(x > 15)  # Returns positions where condition is TRUE\n\n# Using %in% for membership tests\nfruits <- c(\"apple\", \"banana\", \"cherry\", \"date\")\nfruits %in% c(\"banana\", \"date\", \"fig\")  # Tests which elements are in the second vector\nfruits[fruits %in% c(\"banana\", \"date\", \"fig\")]  # Select matching elements\n```\n\nRemember that R indexing starts at 1, not 0 as in many other programming languages."},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","highlight-style":"zenburn","toc":true,"css":["../styles.css"],"output-file":"indexing.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"sketchy","code-copy":true,"title":"Indexing Arrays in R","description":"Learn how to access and manipulate elements in vectors, matrices, and arrays in R","date":"2025-03-30","categories":["basics","r-programming"],"image":"https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/RStudio.png"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}
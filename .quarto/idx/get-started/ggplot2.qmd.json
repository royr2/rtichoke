{"title":"Introduction to ggplot2 Graphics","markdown":{"yaml":{"title":"Introduction to ggplot2 Graphics","description":"Learn how to create beautiful visualizations using the ggplot2 package in R","date":"2025-03-30","categories":["visualization","tidyverse"],"image":"https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/ggplot2.png","execute":{"echo":true,"warning":false,"message":false,"eval":true}},"headingText":"Getting Started with ggplot2","containsRefs":false,"markdown":"\n\nThe `ggplot2` package, part of the tidyverse, implements the Grammar of Graphics to create elegant and complex plots with consistent syntax. It is one of the most popular visualization packages in R.\n\n\nFirst, install and load the package:\n\n```{r}\n# Install if needed (uncomment to run)\n# install.packages(\"ggplot2\")\n\n# Load the package\nlibrary(ggplot2)\n\n# We'll use the built-in mtcars dataset\ndata(mtcars)\n```\n\n### The Grammar of Graphics\n\nggplot2 is based on the idea that any plot can be built from the same components:\n\n1.  **Data**: The dataset you want to visualize\n2.  **Aesthetics**: Mapping of variables to visual properties\n3.  **Geometries**: Visual elements representing data points\n4.  **Facets**: For creating small multiples\n5.  **Statistics**: Statistical transformations of the data\n6.  **Coordinates**: The coordinate system\n7.  **Themes**: Controlling the visual style\n\n### Basic Plot Structure\n\nEvery ggplot2 plot starts with the `ggplot()` function and builds with layers:\n\n```{r}\n# Basic scatter plot\nggplot(mtcars, aes(x = wt, y = mpg)) +\n  geom_point()\n```\n\n### Common Geometries (geoms)\n\n#### Scatter Plots\n\n```{r}\n# Enhanced scatter plot\nggplot(mtcars, aes(x = wt, y = mpg, color = factor(cyl), size = hp)) +\n  geom_point(alpha = 0.7) +\n  labs(\n    title = \"Car Weight vs. Fuel Efficiency\",\n    subtitle = \"Colored by cylinder count, sized by horsepower\",\n    x = \"Weight (1000 lbs)\",\n    y = \"Miles Per Gallon\",\n    color = \"Cylinders\",\n    size = \"Horsepower\"\n  )\n```\n\n#### Line Plots\n\n```{r}\n# Create sample time series data\ntime_data <- data.frame(\n  time = 1:20,\n  value = cumsum(rnorm(20))\n)\n\n# Line plot\nggplot(time_data, aes(x = time, y = value)) +\n  geom_line(color = \"steelblue\", size = 1) +\n  geom_point(color = \"steelblue\", size = 2) +\n  labs(title = \"Time Series Plot\", x = \"Time\", y = \"Value\")\n```\n\n#### Bar Charts\n\n```{r}\n# Count of cars by cylinder\nggplot(mtcars, aes(x = factor(cyl))) +\n  geom_bar(fill = \"steelblue\") +\n  labs(title = \"Count of Cars by Cylinder\", x = \"Cylinders\", y = \"Count\")\n\n# Bar chart with values\ncyl_summary <- as.data.frame(table(mtcars$cyl))\nnames(cyl_summary) <- c(\"cyl\", \"count\")\n\nggplot(cyl_summary, aes(x = cyl, y = count)) +\n  geom_col(fill = \"steelblue\") +\n  geom_text(aes(label = count), vjust = -0.5) +\n  labs(title = \"Count of Cars by Cylinder\", x = \"Cylinders\", y = \"Count\")\n```\n\n#### Histograms and Density Plots\n\n```{r}\n# Histogram\nggplot(mtcars, aes(x = mpg)) +\n  geom_histogram(bins = 10, fill = \"steelblue\", color = \"white\") +\n  labs(title = \"Distribution of Fuel Efficiency\", x = \"Miles Per Gallon\", y = \"Count\")\n\n# Density plot\nggplot(mtcars, aes(x = mpg)) +\n  geom_density(fill = \"steelblue\", alpha = 0.5) +\n  labs(title = \"Density of Fuel Efficiency\", x = \"Miles Per Gallon\", y = \"Density\")\n\n# Combined histogram and density\nggplot(mtcars, aes(x = mpg)) +\n  geom_histogram(aes(y = ..density..), bins = 10, fill = \"lightblue\", color = \"white\") +\n  geom_density(color = \"darkblue\", size = 1) +\n  labs(title = \"Distribution of Fuel Efficiency\", x = \"Miles Per Gallon\", y = \"Density\")\n```\n\n#### Box Plots\n\n```{r}\n# Box plot\nggplot(mtcars, aes(x = factor(cyl), y = mpg)) +\n  geom_boxplot(fill = \"lightblue\") +\n  labs(title = \"Fuel Efficiency by Cylinder Count\", x = \"Cylinders\", y = \"Miles Per Gallon\")\n\n# Box plot with points\nggplot(mtcars, aes(x = factor(cyl), y = mpg)) +\n  geom_boxplot(fill = \"lightblue\", outlier.shape = NA) +\n  geom_jitter(width = 0.2, alpha = 0.5) +\n  labs(title = \"Fuel Efficiency by Cylinder Count\", x = \"Cylinders\", y = \"Miles Per Gallon\")\n```\n\n### Customizing Aesthetics\n\nYou can map variables to various aesthetic properties:\n\n```{r}\n# Multiple aesthetics\nggplot(mtcars, aes(x = wt, y = mpg, color = factor(cyl), shape = factor(am), size = hp)) +\n  geom_point(alpha = 0.7) +\n  labs(\n    title = \"Car Weight vs. Fuel Efficiency\",\n    x = \"Weight (1000 lbs)\",\n    y = \"Miles Per Gallon\",\n    color = \"Cylinders\",\n    shape = \"Transmission\",\n    size = \"Horsepower\"\n  ) +\n  scale_shape_discrete(labels = c(\"Automatic\", \"Manual\"))\n```\n\n### Faceting (Small Multiples)\n\nFaceting creates separate plots for subsets of data:\n\n```{r}\n# Facet by transmission type\nggplot(mtcars, aes(x = wt, y = mpg, color = factor(cyl))) +\n  geom_point() +\n  facet_wrap(~am, labeller = labeller(am = c(\"0\" = \"Automatic\", \"1\" = \"Manual\"))) +\n  labs(title = \"Weight vs. MPG by Transmission Type\", x = \"Weight\", y = \"MPG\", color = \"Cylinders\")\n\n# Facet grid with two variables\nggplot(mtcars, aes(x = wt, y = mpg)) +\n  geom_point() +\n  facet_grid(vs ~ gear, labeller = labeller(\n    vs = c(\"0\" = \"V-Engine\", \"1\" = \"Straight Engine\"),\n    gear = c(\"3\" = \"3 Gears\", \"4\" = \"4 Gears\", \"5\" = \"5 Gears\")\n  )) +\n  labs(title = \"Weight vs. MPG by Engine Type and Gear Count\")\n```\n\n### Adding Statistics\n\nggplot2 can add statistical summaries to plots:\n\n```{r}\n# Scatter plot with linear regression line\nggplot(mtcars, aes(x = wt, y = mpg)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = TRUE) +\n  labs(title = \"Weight vs. MPG with Linear Trend\", x = \"Weight\", y = \"MPG\")\n\n# Scatter plot with different smoothing methods by cylinder\nggplot(mtcars, aes(x = wt, y = mpg, color = factor(cyl))) +\n  geom_point() +\n  geom_smooth(se = FALSE) +\n  labs(title = \"Weight vs. MPG by Cylinder\", x = \"Weight\", y = \"MPG\", color = \"Cylinders\")\n```\n\n### Coordinate Systems\n\nChange how the data is mapped to the plotting area:\n\n```{r}\n# Flip coordinates\nggplot(mtcars, aes(x = factor(cyl), y = mpg)) +\n  geom_boxplot(fill = \"lightblue\") +\n  coord_flip() +\n  labs(title = \"Fuel Efficiency by Cylinder Count\", x = \"Cylinders\", y = \"Miles Per Gallon\")\n\n# Polar coordinates for a pie chart\nggplot(cyl_summary, aes(x = \"\", y = count, fill = cyl)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(\"y\", start = 0) +\n  labs(title = \"Cars by Cylinder Count\", fill = \"Cylinders\") +\n  theme_void()\n```\n\n### Themes\n\nThemes control the non-data elements of the plot:\n\n```{r}\n# Default theme\np <- ggplot(mtcars, aes(x = wt, y = mpg, color = factor(cyl))) +\n  geom_point() +\n  labs(title = \"Weight vs. MPG by Cylinder Count\", x = \"Weight\", y = \"MPG\", color = \"Cylinders\")\n\n# Different built-in themes\np + theme_minimal()\np + theme_classic()\np + theme_dark()\np + theme_bw()\n```\n\n### Custom Theme Elements\n\nYou can customize specific theme elements:\n\n```{r}\nggplot(mtcars, aes(x = wt, y = mpg, color = factor(cyl))) +\n  geom_point(size = 3) +\n  labs(\n    title = \"Custom Themed Plot\",\n    subtitle = \"Weight vs. MPG by Cylinder Count\",\n    x = \"Weight (1000 lbs)\",\n    y = \"Miles Per Gallon\",\n    color = \"Cylinders\"\n  ) +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    plot.subtitle = element_text(size = 12, color = \"gray50\"),\n    axis.title = element_text(size = 12, face = \"bold\"),\n    legend.position = \"top\",\n    legend.background = element_rect(fill = \"lightyellow\", color = \"gray\"),\n    panel.background = element_rect(fill = \"white\"),\n    panel.grid.major = element_line(color = \"gray90\"),\n    panel.grid.minor = element_line(color = \"gray95\")\n  )\n```\n\n### Combining Multiple Plots\n\nThe `patchwork` package makes it easy to combine multiple ggplots:\n\n```{r}\n# Create three different plots\nif (requireNamespace(\"patchwork\", quietly = TRUE)) {\n  library(patchwork)\n  \n  p1 <- ggplot(mtcars, aes(x = wt, y = mpg)) +\n    geom_point() +\n    labs(title = \"Weight vs. MPG\")\n  \n  p2 <- ggplot(mtcars, aes(x = hp, y = mpg)) +\n    geom_point(color = \"red\") +\n    labs(title = \"Horsepower vs. MPG\")\n  \n  p3 <- ggplot(mtcars, aes(x = factor(cyl))) +\n    geom_bar(fill = \"steelblue\") +\n    labs(title = \"Count by Cylinders\")\n  \n  # Combine plots\n  p1 + p2 + p3 + plot_layout(ncol = 2)\n} else {\n  message(\"The patchwork package is not installed. Install with: install.packages('patchwork')\")\n}\n```\n\n### Saving ggplot2 Plots\n\n```{r}\n# Create a plot to save\np <- ggplot(mtcars, aes(x = wt, y = mpg, color = factor(cyl))) +\n  geom_point(size = 3) +\n  labs(title = \"Weight vs. MPG\", x = \"Weight\", y = \"MPG\", color = \"Cylinders\") +\n  theme_minimal()\n\n# Example of how to save (not run)\n# ggsave(\"my_ggplot.png\", plot = p, width = 8, height = 6, dpi = 300)\n# ggsave(\"my_ggplot.pdf\", plot = p, width = 8, height = 6)\n```\n\nggplot2 offers a powerful and flexible system for creating visualizations in R. Its consistent syntax and layered approach make it possible to create both simple and complex plots with the same basic structure.\n","srcMarkdownNoYaml":"\n\nThe `ggplot2` package, part of the tidyverse, implements the Grammar of Graphics to create elegant and complex plots with consistent syntax. It is one of the most popular visualization packages in R.\n\n### Getting Started with ggplot2\n\nFirst, install and load the package:\n\n```{r}\n# Install if needed (uncomment to run)\n# install.packages(\"ggplot2\")\n\n# Load the package\nlibrary(ggplot2)\n\n# We'll use the built-in mtcars dataset\ndata(mtcars)\n```\n\n### The Grammar of Graphics\n\nggplot2 is based on the idea that any plot can be built from the same components:\n\n1.  **Data**: The dataset you want to visualize\n2.  **Aesthetics**: Mapping of variables to visual properties\n3.  **Geometries**: Visual elements representing data points\n4.  **Facets**: For creating small multiples\n5.  **Statistics**: Statistical transformations of the data\n6.  **Coordinates**: The coordinate system\n7.  **Themes**: Controlling the visual style\n\n### Basic Plot Structure\n\nEvery ggplot2 plot starts with the `ggplot()` function and builds with layers:\n\n```{r}\n# Basic scatter plot\nggplot(mtcars, aes(x = wt, y = mpg)) +\n  geom_point()\n```\n\n### Common Geometries (geoms)\n\n#### Scatter Plots\n\n```{r}\n# Enhanced scatter plot\nggplot(mtcars, aes(x = wt, y = mpg, color = factor(cyl), size = hp)) +\n  geom_point(alpha = 0.7) +\n  labs(\n    title = \"Car Weight vs. Fuel Efficiency\",\n    subtitle = \"Colored by cylinder count, sized by horsepower\",\n    x = \"Weight (1000 lbs)\",\n    y = \"Miles Per Gallon\",\n    color = \"Cylinders\",\n    size = \"Horsepower\"\n  )\n```\n\n#### Line Plots\n\n```{r}\n# Create sample time series data\ntime_data <- data.frame(\n  time = 1:20,\n  value = cumsum(rnorm(20))\n)\n\n# Line plot\nggplot(time_data, aes(x = time, y = value)) +\n  geom_line(color = \"steelblue\", size = 1) +\n  geom_point(color = \"steelblue\", size = 2) +\n  labs(title = \"Time Series Plot\", x = \"Time\", y = \"Value\")\n```\n\n#### Bar Charts\n\n```{r}\n# Count of cars by cylinder\nggplot(mtcars, aes(x = factor(cyl))) +\n  geom_bar(fill = \"steelblue\") +\n  labs(title = \"Count of Cars by Cylinder\", x = \"Cylinders\", y = \"Count\")\n\n# Bar chart with values\ncyl_summary <- as.data.frame(table(mtcars$cyl))\nnames(cyl_summary) <- c(\"cyl\", \"count\")\n\nggplot(cyl_summary, aes(x = cyl, y = count)) +\n  geom_col(fill = \"steelblue\") +\n  geom_text(aes(label = count), vjust = -0.5) +\n  labs(title = \"Count of Cars by Cylinder\", x = \"Cylinders\", y = \"Count\")\n```\n\n#### Histograms and Density Plots\n\n```{r}\n# Histogram\nggplot(mtcars, aes(x = mpg)) +\n  geom_histogram(bins = 10, fill = \"steelblue\", color = \"white\") +\n  labs(title = \"Distribution of Fuel Efficiency\", x = \"Miles Per Gallon\", y = \"Count\")\n\n# Density plot\nggplot(mtcars, aes(x = mpg)) +\n  geom_density(fill = \"steelblue\", alpha = 0.5) +\n  labs(title = \"Density of Fuel Efficiency\", x = \"Miles Per Gallon\", y = \"Density\")\n\n# Combined histogram and density\nggplot(mtcars, aes(x = mpg)) +\n  geom_histogram(aes(y = ..density..), bins = 10, fill = \"lightblue\", color = \"white\") +\n  geom_density(color = \"darkblue\", size = 1) +\n  labs(title = \"Distribution of Fuel Efficiency\", x = \"Miles Per Gallon\", y = \"Density\")\n```\n\n#### Box Plots\n\n```{r}\n# Box plot\nggplot(mtcars, aes(x = factor(cyl), y = mpg)) +\n  geom_boxplot(fill = \"lightblue\") +\n  labs(title = \"Fuel Efficiency by Cylinder Count\", x = \"Cylinders\", y = \"Miles Per Gallon\")\n\n# Box plot with points\nggplot(mtcars, aes(x = factor(cyl), y = mpg)) +\n  geom_boxplot(fill = \"lightblue\", outlier.shape = NA) +\n  geom_jitter(width = 0.2, alpha = 0.5) +\n  labs(title = \"Fuel Efficiency by Cylinder Count\", x = \"Cylinders\", y = \"Miles Per Gallon\")\n```\n\n### Customizing Aesthetics\n\nYou can map variables to various aesthetic properties:\n\n```{r}\n# Multiple aesthetics\nggplot(mtcars, aes(x = wt, y = mpg, color = factor(cyl), shape = factor(am), size = hp)) +\n  geom_point(alpha = 0.7) +\n  labs(\n    title = \"Car Weight vs. Fuel Efficiency\",\n    x = \"Weight (1000 lbs)\",\n    y = \"Miles Per Gallon\",\n    color = \"Cylinders\",\n    shape = \"Transmission\",\n    size = \"Horsepower\"\n  ) +\n  scale_shape_discrete(labels = c(\"Automatic\", \"Manual\"))\n```\n\n### Faceting (Small Multiples)\n\nFaceting creates separate plots for subsets of data:\n\n```{r}\n# Facet by transmission type\nggplot(mtcars, aes(x = wt, y = mpg, color = factor(cyl))) +\n  geom_point() +\n  facet_wrap(~am, labeller = labeller(am = c(\"0\" = \"Automatic\", \"1\" = \"Manual\"))) +\n  labs(title = \"Weight vs. MPG by Transmission Type\", x = \"Weight\", y = \"MPG\", color = \"Cylinders\")\n\n# Facet grid with two variables\nggplot(mtcars, aes(x = wt, y = mpg)) +\n  geom_point() +\n  facet_grid(vs ~ gear, labeller = labeller(\n    vs = c(\"0\" = \"V-Engine\", \"1\" = \"Straight Engine\"),\n    gear = c(\"3\" = \"3 Gears\", \"4\" = \"4 Gears\", \"5\" = \"5 Gears\")\n  )) +\n  labs(title = \"Weight vs. MPG by Engine Type and Gear Count\")\n```\n\n### Adding Statistics\n\nggplot2 can add statistical summaries to plots:\n\n```{r}\n# Scatter plot with linear regression line\nggplot(mtcars, aes(x = wt, y = mpg)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = TRUE) +\n  labs(title = \"Weight vs. MPG with Linear Trend\", x = \"Weight\", y = \"MPG\")\n\n# Scatter plot with different smoothing methods by cylinder\nggplot(mtcars, aes(x = wt, y = mpg, color = factor(cyl))) +\n  geom_point() +\n  geom_smooth(se = FALSE) +\n  labs(title = \"Weight vs. MPG by Cylinder\", x = \"Weight\", y = \"MPG\", color = \"Cylinders\")\n```\n\n### Coordinate Systems\n\nChange how the data is mapped to the plotting area:\n\n```{r}\n# Flip coordinates\nggplot(mtcars, aes(x = factor(cyl), y = mpg)) +\n  geom_boxplot(fill = \"lightblue\") +\n  coord_flip() +\n  labs(title = \"Fuel Efficiency by Cylinder Count\", x = \"Cylinders\", y = \"Miles Per Gallon\")\n\n# Polar coordinates for a pie chart\nggplot(cyl_summary, aes(x = \"\", y = count, fill = cyl)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(\"y\", start = 0) +\n  labs(title = \"Cars by Cylinder Count\", fill = \"Cylinders\") +\n  theme_void()\n```\n\n### Themes\n\nThemes control the non-data elements of the plot:\n\n```{r}\n# Default theme\np <- ggplot(mtcars, aes(x = wt, y = mpg, color = factor(cyl))) +\n  geom_point() +\n  labs(title = \"Weight vs. MPG by Cylinder Count\", x = \"Weight\", y = \"MPG\", color = \"Cylinders\")\n\n# Different built-in themes\np + theme_minimal()\np + theme_classic()\np + theme_dark()\np + theme_bw()\n```\n\n### Custom Theme Elements\n\nYou can customize specific theme elements:\n\n```{r}\nggplot(mtcars, aes(x = wt, y = mpg, color = factor(cyl))) +\n  geom_point(size = 3) +\n  labs(\n    title = \"Custom Themed Plot\",\n    subtitle = \"Weight vs. MPG by Cylinder Count\",\n    x = \"Weight (1000 lbs)\",\n    y = \"Miles Per Gallon\",\n    color = \"Cylinders\"\n  ) +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    plot.subtitle = element_text(size = 12, color = \"gray50\"),\n    axis.title = element_text(size = 12, face = \"bold\"),\n    legend.position = \"top\",\n    legend.background = element_rect(fill = \"lightyellow\", color = \"gray\"),\n    panel.background = element_rect(fill = \"white\"),\n    panel.grid.major = element_line(color = \"gray90\"),\n    panel.grid.minor = element_line(color = \"gray95\")\n  )\n```\n\n### Combining Multiple Plots\n\nThe `patchwork` package makes it easy to combine multiple ggplots:\n\n```{r}\n# Create three different plots\nif (requireNamespace(\"patchwork\", quietly = TRUE)) {\n  library(patchwork)\n  \n  p1 <- ggplot(mtcars, aes(x = wt, y = mpg)) +\n    geom_point() +\n    labs(title = \"Weight vs. MPG\")\n  \n  p2 <- ggplot(mtcars, aes(x = hp, y = mpg)) +\n    geom_point(color = \"red\") +\n    labs(title = \"Horsepower vs. MPG\")\n  \n  p3 <- ggplot(mtcars, aes(x = factor(cyl))) +\n    geom_bar(fill = \"steelblue\") +\n    labs(title = \"Count by Cylinders\")\n  \n  # Combine plots\n  p1 + p2 + p3 + plot_layout(ncol = 2)\n} else {\n  message(\"The patchwork package is not installed. Install with: install.packages('patchwork')\")\n}\n```\n\n### Saving ggplot2 Plots\n\n```{r}\n# Create a plot to save\np <- ggplot(mtcars, aes(x = wt, y = mpg, color = factor(cyl))) +\n  geom_point(size = 3) +\n  labs(title = \"Weight vs. MPG\", x = \"Weight\", y = \"MPG\", color = \"Cylinders\") +\n  theme_minimal()\n\n# Example of how to save (not run)\n# ggsave(\"my_ggplot.png\", plot = p, width = 8, height = 6, dpi = 300)\n# ggsave(\"my_ggplot.pdf\", plot = p, width = 8, height = 6)\n```\n\nggplot2 offers a powerful and flexible system for creating visualizations in R. Its consistent syntax and layered approach make it possible to create both simple and complex plots with the same basic structure.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","highlight-style":"zenburn","toc":true,"css":["../styles.css"],"output-file":"ggplot2.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"sketchy","code-copy":true,"title":"Introduction to ggplot2 Graphics","description":"Learn how to create beautiful visualizations using the ggplot2 package in R","date":"2025-03-30","categories":["visualization","tidyverse"],"image":"https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/ggplot2.png"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}
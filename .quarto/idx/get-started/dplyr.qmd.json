{"title":"Introduction to dplyr","markdown":{"yaml":{"title":"Introduction to dplyr","description":"Learn the basics of data manipulation with the dplyr package in R","date":"2025-03-30","categories":["data-manipulation","tidyverse"],"image":"https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/dplyr.png","execute":{"echo":true,"warning":false,"message":false,"eval":true}},"headingText":"Getting Started with dplyr","containsRefs":false,"markdown":"\n\nThe `dplyr` package is part of the tidyverse and provides a grammar for data manipulation in R. It makes data transformation tasks more intuitive and readable.\n\n\nFirst, let's install and load the package:\n\n```{r}\n# Install if needed (uncomment to run)\n# install.packages(\"dplyr\")\n# install.packages(\"tibble\")\n\n# Load the packages\nlibrary(dplyr)\nlibrary(tibble)  # For rownames_to_column function\n\n# We'll use the built-in mtcars dataset\ndata(mtcars)\nglimpse(mtcars)\n```\n\n### The Main dplyr Verbs\n\ndplyr is built around a set of core verbs (functions) that perform common data manipulation tasks:\n\n#### 1. `filter()` - Subset rows based on conditions\n\n```{r}\n# Select cars with 6 cylinders\nfilter(mtcars, cyl == 6)\n\n# Multiple conditions: cars with 6 cylinders AND mpg > 20\nfilter(mtcars, cyl == 6, mpg > 20)\n\n# OR conditions\nfilter(mtcars, cyl == 6 | mpg > 30)\n```\n\n#### 2. `select()` - Pick columns by name\n\n```{r}\n# Select specific columns\nselect(mtcars, mpg, cyl, hp)\n\n# Select a range of columns\nselect(mtcars, mpg:hp)\n\n# Select all columns except some\nselect(mtcars, -gear, -carb)\n\n# Rename columns while selecting\nselect(mtcars, miles_per_gallon = mpg, cylinders = cyl)\n```\n\n#### 3. `mutate()` - Create new columns\n\n```{r}\n# Add a new column\nmutate(mtcars, \n       kpl = mpg * 0.425,  # Convert mpg to km per liter\n       hp_per_cyl = hp / cyl)\n\n# Modify existing columns and add new ones\nmutate(mtcars,\n       mpg = mpg * 0.425,  # Overwrite mpg with km per liter\n       efficiency = mpg / wt)\n```\n\n#### 4. `arrange()` - Reorder rows\n\n```{r}\n# Sort by mpg (ascending)\narrange(mtcars, mpg)\n\n# Sort by mpg (descending)\narrange(mtcars, desc(mpg))\n\n# Sort by multiple columns\narrange(mtcars, cyl, desc(mpg))\n```\n\n#### 5. `summarize()` - Collapse rows to summary statistics\n\n```{r}\n# Calculate summary statistics\nsummarize(mtcars,\n          avg_mpg = mean(mpg),\n          max_hp = max(hp),\n          count = n())\n```\n\n#### 6. `group_by()` - Group data for operations\n\n```{r}\n# Group by cylinder and calculate statistics per group\nmtcars %>%\n  group_by(cyl) %>%\n  summarize(\n    count = n(),\n    avg_mpg = mean(mpg),\n    avg_hp = mean(hp),\n    .groups = \"drop\"\n  )\n```\n\n### The Pipe Operator (`%>%`)\n\nThe pipe operator makes code more readable by chaining operations:\n\n```{r}\n# Without pipes\nresult1 <- filter(mtcars, cyl == 4)\nresult2 <- select(result1, mpg, hp, wt)\nresult3 <- arrange(result2, desc(mpg))\nresult3\n\n# With pipes - same operations, more readable\nmtcars %>%\n  filter(cyl == 4) %>%\n  select(mpg, hp, wt) %>%\n  arrange(desc(mpg))\n```\n\n### More Useful dplyr Functions\n\n#### `distinct()` - Get unique rows\n\n```{r}\n# Get unique values of cyl and gear\nmtcars %>%\n  select(cyl, gear) %>%\n  distinct()\n```\n\n#### `count()` - Count occurrences\n\n```{r}\n# Count cars by cylinder\nmtcars %>%\n  count(cyl, sort = TRUE)\n\n# Count by multiple variables\nmtcars %>%\n  count(cyl, gear)\n```\n\n#### `slice()` - Select rows by position\n\n```{r}\n# Select first 5 rows\nmtcars %>%\n  slice(1:5)\n\n# Select top 3 rows by mpg\nmtcars %>%\n  arrange(desc(mpg)) %>%\n  slice(1:3)\n```\n\n#### `pull()` - Extract a column as a vector\n\n```{r}\n# Extract mpg column as a vector\nmtcars %>%\n  pull(mpg)\n```\n\n### Combining Multiple Operations\n\nLet's solve a more complex problem by combining multiple dplyr functions:\n\n```{r}\n# First add rownames as a column\ncars_with_names <- mtcars %>%\n  tibble::rownames_to_column(\"model\")\n\n# Now perform the analysis\ncars_with_names %>%\n  group_by(cyl) %>%\n  filter(mpg == max(mpg)) %>%\n  select(cyl, model, mpg, hp) %>%\n  arrange(cyl) %>%\n  ungroup()\n```\n\n### Working with Joins\n\ndplyr provides functions for joining datasets:\n\n```{r}\n# Create sample datasets\nmanufacturers <- data.frame(\n  make = c(\"Honda\", \"Toyota\", \"Ford\", \"BMW\", \"Mercedes\"),\n  country = c(\"Japan\", \"Japan\", \"USA\", \"Germany\", \"Germany\"),\n  stringsAsFactors = FALSE\n)\n\ncars <- data.frame(\n  model = c(\"Civic\", \"Corolla\", \"Focus\", \"3 Series\", \"Fiesta\"),\n  make = c(\"Honda\", \"Toyota\", \"Ford\", \"BMW\", \"Ford\"),\n  stringsAsFactors = FALSE\n)\n\n# Inner join - only matching rows\ninner_join(cars, manufacturers, by = \"make\")\n\n# Left join - all rows from cars\nleft_join(cars, manufacturers, by = \"make\")\n\n# Full join - all rows from both\nfull_join(cars, manufacturers, by = \"make\")\n```\n\ndplyr makes data manipulation in R more intuitive and efficient. Its consistent syntax and the pipe operator allow you to write code that's both powerful and readable.\n","srcMarkdownNoYaml":"\n\nThe `dplyr` package is part of the tidyverse and provides a grammar for data manipulation in R. It makes data transformation tasks more intuitive and readable.\n\n### Getting Started with dplyr\n\nFirst, let's install and load the package:\n\n```{r}\n# Install if needed (uncomment to run)\n# install.packages(\"dplyr\")\n# install.packages(\"tibble\")\n\n# Load the packages\nlibrary(dplyr)\nlibrary(tibble)  # For rownames_to_column function\n\n# We'll use the built-in mtcars dataset\ndata(mtcars)\nglimpse(mtcars)\n```\n\n### The Main dplyr Verbs\n\ndplyr is built around a set of core verbs (functions) that perform common data manipulation tasks:\n\n#### 1. `filter()` - Subset rows based on conditions\n\n```{r}\n# Select cars with 6 cylinders\nfilter(mtcars, cyl == 6)\n\n# Multiple conditions: cars with 6 cylinders AND mpg > 20\nfilter(mtcars, cyl == 6, mpg > 20)\n\n# OR conditions\nfilter(mtcars, cyl == 6 | mpg > 30)\n```\n\n#### 2. `select()` - Pick columns by name\n\n```{r}\n# Select specific columns\nselect(mtcars, mpg, cyl, hp)\n\n# Select a range of columns\nselect(mtcars, mpg:hp)\n\n# Select all columns except some\nselect(mtcars, -gear, -carb)\n\n# Rename columns while selecting\nselect(mtcars, miles_per_gallon = mpg, cylinders = cyl)\n```\n\n#### 3. `mutate()` - Create new columns\n\n```{r}\n# Add a new column\nmutate(mtcars, \n       kpl = mpg * 0.425,  # Convert mpg to km per liter\n       hp_per_cyl = hp / cyl)\n\n# Modify existing columns and add new ones\nmutate(mtcars,\n       mpg = mpg * 0.425,  # Overwrite mpg with km per liter\n       efficiency = mpg / wt)\n```\n\n#### 4. `arrange()` - Reorder rows\n\n```{r}\n# Sort by mpg (ascending)\narrange(mtcars, mpg)\n\n# Sort by mpg (descending)\narrange(mtcars, desc(mpg))\n\n# Sort by multiple columns\narrange(mtcars, cyl, desc(mpg))\n```\n\n#### 5. `summarize()` - Collapse rows to summary statistics\n\n```{r}\n# Calculate summary statistics\nsummarize(mtcars,\n          avg_mpg = mean(mpg),\n          max_hp = max(hp),\n          count = n())\n```\n\n#### 6. `group_by()` - Group data for operations\n\n```{r}\n# Group by cylinder and calculate statistics per group\nmtcars %>%\n  group_by(cyl) %>%\n  summarize(\n    count = n(),\n    avg_mpg = mean(mpg),\n    avg_hp = mean(hp),\n    .groups = \"drop\"\n  )\n```\n\n### The Pipe Operator (`%>%`)\n\nThe pipe operator makes code more readable by chaining operations:\n\n```{r}\n# Without pipes\nresult1 <- filter(mtcars, cyl == 4)\nresult2 <- select(result1, mpg, hp, wt)\nresult3 <- arrange(result2, desc(mpg))\nresult3\n\n# With pipes - same operations, more readable\nmtcars %>%\n  filter(cyl == 4) %>%\n  select(mpg, hp, wt) %>%\n  arrange(desc(mpg))\n```\n\n### More Useful dplyr Functions\n\n#### `distinct()` - Get unique rows\n\n```{r}\n# Get unique values of cyl and gear\nmtcars %>%\n  select(cyl, gear) %>%\n  distinct()\n```\n\n#### `count()` - Count occurrences\n\n```{r}\n# Count cars by cylinder\nmtcars %>%\n  count(cyl, sort = TRUE)\n\n# Count by multiple variables\nmtcars %>%\n  count(cyl, gear)\n```\n\n#### `slice()` - Select rows by position\n\n```{r}\n# Select first 5 rows\nmtcars %>%\n  slice(1:5)\n\n# Select top 3 rows by mpg\nmtcars %>%\n  arrange(desc(mpg)) %>%\n  slice(1:3)\n```\n\n#### `pull()` - Extract a column as a vector\n\n```{r}\n# Extract mpg column as a vector\nmtcars %>%\n  pull(mpg)\n```\n\n### Combining Multiple Operations\n\nLet's solve a more complex problem by combining multiple dplyr functions:\n\n```{r}\n# First add rownames as a column\ncars_with_names <- mtcars %>%\n  tibble::rownames_to_column(\"model\")\n\n# Now perform the analysis\ncars_with_names %>%\n  group_by(cyl) %>%\n  filter(mpg == max(mpg)) %>%\n  select(cyl, model, mpg, hp) %>%\n  arrange(cyl) %>%\n  ungroup()\n```\n\n### Working with Joins\n\ndplyr provides functions for joining datasets:\n\n```{r}\n# Create sample datasets\nmanufacturers <- data.frame(\n  make = c(\"Honda\", \"Toyota\", \"Ford\", \"BMW\", \"Mercedes\"),\n  country = c(\"Japan\", \"Japan\", \"USA\", \"Germany\", \"Germany\"),\n  stringsAsFactors = FALSE\n)\n\ncars <- data.frame(\n  model = c(\"Civic\", \"Corolla\", \"Focus\", \"3 Series\", \"Fiesta\"),\n  make = c(\"Honda\", \"Toyota\", \"Ford\", \"BMW\", \"Ford\"),\n  stringsAsFactors = FALSE\n)\n\n# Inner join - only matching rows\ninner_join(cars, manufacturers, by = \"make\")\n\n# Left join - all rows from cars\nleft_join(cars, manufacturers, by = \"make\")\n\n# Full join - all rows from both\nfull_join(cars, manufacturers, by = \"make\")\n```\n\ndplyr makes data manipulation in R more intuitive and efficient. Its consistent syntax and the pipe operator allow you to write code that's both powerful and readable.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","highlight-style":"zenburn","toc":true,"css":["../styles.css"],"output-file":"dplyr.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"sketchy","code-copy":true,"title":"Introduction to dplyr","description":"Learn the basics of data manipulation with the dplyr package in R","date":"2025-03-30","categories":["data-manipulation","tidyverse"],"image":"https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/dplyr.png"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}
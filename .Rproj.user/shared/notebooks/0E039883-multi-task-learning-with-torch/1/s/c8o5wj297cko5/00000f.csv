"0","#| label: evaluation"
"0",""
"0","# Set model to evaluation mode"
"0","model$eval()"
"0",""
"0","# Make predictions on test set"
"0","with_no_grad({"
"0","  outputs <- model(x_test)"
"0","  "
"0","  # Regression evaluation"
"0","  reg_preds <- outputs$regression$squeeze()"
"0","  reg_test_loss <- regression_loss_fn(reg_preds, y_reg_test)"
"0","  "
"0","  # Classification evaluation"
"0","  cls_preds <- outputs$classification$squeeze()"
"0","  cls_probs <- nnf_sigmoid(cls_preds)"
"0","  cls_test_loss <- classification_loss_fn(cls_preds, y_cls_test)"
"0","  "
"0","  # Convert predictions to binary (threshold = 0.5)"
"0","  cls_pred_labels <- (cls_probs > 0.5)$to(torch_int())"
"0","  "
"0","  # Calculate accuracy"
"0","  accuracy <- (cls_pred_labels == y_cls_test$to(torch_int()))$sum()$item() / length(test_idx)"
"0","})"
"0",""
"0","# Calculate additional metrics"
"0","reg_preds_r <- as.numeric(reg_preds)"
"0","y_reg_test_r <- as.numeric(y_reg_test)"
"0","cls_probs_r <- as.numeric(cls_probs)"
"0","y_cls_test_r <- as.numeric(y_cls_test)"
"0",""
"0","# Regression metrics"
"0","rmse <- sqrt(mean((reg_preds_r - y_reg_test_r)^2))"
"0","mae <- mean(abs(reg_preds_r - y_reg_test_r))"
"0","r_squared <- cor(reg_preds_r, y_reg_test_r)^2"
"0",""
"0","# Classification metrics"
"0","auc <- try({"
"0","  if(require(pROC, quietly = TRUE)) {"
"0","    pROC::auc(pROC::roc(y_cls_test_r, cls_probs_r, quiet = TRUE))"
"0","  } else {"
"0","    NA"
"0","  }"
"0","}, silent = TRUE)"
"0",""
"0","# Display results"
"0","performance_results <- data.frame("
"0","  Task = c(""Regression"", ""Regression"", ""Regression"", ""Classification"", ""Classification""),"
"0","  Metric = c(""Test Loss (MSE)"", ""RMSE"", ""R-squared"", ""Test Loss (BCE)"", ""Accuracy""),"
"0","  Value = c("
"0","    round(reg_test_loss$item(), 4),"
"0","    round(rmse, 4),"
"0","    round(r_squared, 4),"
"0","    round(cls_test_loss$item(), 4),"
"0","    round(accuracy * 100, 2)"
"0","  )"
"0",")"
"0",""
"0","print(performance_results)"

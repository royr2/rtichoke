"0","#| label: visualize-training"
"0","#| fig-width: 12"
"0","#| fig-height: 10"
"0",""
"0","# Plot training history"
"0","p1 <- ggplot(training_history, aes(x = epoch)) +"
"0","  geom_line(aes(y = reg_loss, color = ""Regression Loss""), size = 1) +"
"0","  geom_line(aes(y = cls_loss, color = ""Classification Loss""), size = 1) +"
"0","  geom_line(aes(y = total_loss, color = ""Total Loss""), size = 1, linetype = ""dashed"") +"
"0","  labs(title = ""Multi-Task Training Progress"","
"0","       subtitle = ""Loss curves for both tasks during training"","
"0","       x = ""Epoch"", y = ""Loss"", color = ""Loss Type"") +"
"0","  theme_minimal() +"
"0","  scale_color_brewer(palette = ""Set1"")"
"0",""
"0","# Regression predictions vs actual values"
"0","regression_results <- data.frame("
"0","  Actual = y_reg_test_r,"
"0","  Predicted = reg_preds_r"
"0",")"
"0",""
"0","p2 <- ggplot(regression_results, aes(x = Actual, y = Predicted)) +"
"0","  geom_point(alpha = 0.6, color = ""#2c3e50"") +"
"0","  geom_abline(slope = 1, intercept = 0, color = ""#e74c3c"", linetype = ""dashed"", size = 1) +"
"0","  geom_smooth(method = ""lm"", color = ""#3498db"", se = TRUE) +"
"0","  labs(title = ""Regression Task: Actual vs Predicted Values"","
"0","       subtitle = paste(""RÂ² ="", round(r_squared, 3), "", RMSE ="", round(rmse, 3)),"
"0","       x = ""Actual Values"", y = ""Predicted Values"") +"
"0","  theme_minimal()"
"0",""
"0","# Classification probability distribution"
"0","cls_results <- data.frame("
"0","  Probability = cls_probs_r,"
"0","  Actual_Class = factor(y_cls_test_r, labels = c(""Class 0"", ""Class 1""))"
"0",")"
"0",""
"0","p3 <- ggplot(cls_results, aes(x = Probability, fill = Actual_Class)) +"
"0","  geom_histogram(alpha = 0.7, bins = 20, position = ""identity"") +"
"0","  geom_vline(xintercept = 0.5, linetype = ""dashed"", color = ""red"") +"
"0","  labs(title = ""Classification Task: Predicted Probabilities"","
"0","       subtitle = paste(""Accuracy ="", round(accuracy * 100, 1), ""%""),"
"0","       x = ""Predicted Probability"", y = ""Count"", fill = ""Actual Class"") +"
"0","  theme_minimal() +"
"0","  scale_fill_brewer(palette = ""Set1"")"
"0",""
"0","# Confusion matrix"
"0","cls_pred_labels_r <- as.integer(cls_pred_labels)"
"0","confusion_data <- table("
"0","  Predicted = cls_pred_labels_r,"
"0","  Actual = y_cls_test_r"
"0",")"
"0",""
"0","confusion_df <- as.data.frame(confusion_data)"
"0",""
"0","p4 <- ggplot(confusion_df, aes(x = factor(Actual), y = factor(Predicted), fill = Freq)) +"
"0","  geom_tile(color = ""white"") +"
"0","  geom_text(aes(label = Freq), color = ""white"", size = 8, fontface = ""bold"") +"
"0","  scale_fill_gradient(low = ""#3498db"", high = ""#2c3e50"") +"
"0","  labs(title = ""Classification Task: Confusion Matrix"","
"0","       x = ""Actual Class"", y = ""Predicted Class"") +"
"0","  theme_minimal() +"
"0","  theme(legend.position = ""none"")"
"0",""
"0","# Combine plots"
"0","library(patchwork)"
"0","(p1 | p2) / (p3 | p4)"

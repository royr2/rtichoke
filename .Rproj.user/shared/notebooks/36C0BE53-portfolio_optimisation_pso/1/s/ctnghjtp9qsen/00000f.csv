"0","# Append "".NS"" to tickers for Yahoo Finance format (NS = National Stock Exchange)"
"0","tickers <- paste0(ticker_list$Symbol, "".NS"")"
"0","tickers <- tickers[!tickers %in% c(""ETERNAL.NS"", ""JIOFIN.NS"")]"
"0",""
"0","# Initialize empty dataframe to store all ticker data"
"0","ticker_df <- data.frame()"
"0",""
"0","# Create a progress bar to monitor the download process"
"0","# pb <- txtProgressBar(min = 1, max = length(tickers), style = 3)"
"0",""
"0","# Loop through each ticker and download its historical data"
"0","for(nms in tickers){"
"0","  # Download data from Yahoo Finance"
"0","  df <- getSymbols(Symbols = nms, verbose = FALSE, auto.assign = FALSE)"
"0","  "
"0","  # Rename columns for clarity"
"0","  colnames(df) <- c(""open"", ""high"", ""low"", ""close"", ""volume"", ""adjusted"")"
"0","  df$date = rownames(df)"
"0","  "
"0","  # Convert to dataframe and add ticker and date information"
"0","  df <- data.frame(df)"
"0","  df$ticker <- nms"
"0","  df$date <- rownames(df)"
"0","  "
"0","  # Append to the main dataframe"
"0","  ticker_df <- rbind(ticker_df, df)"
"0","  "
"0","  Sys.sleep(0.2)"
"0","  "
"0","  # Update progress bar"
"0","  # setTxtProgressBar(pb, which(tickers == nms))"
"0","}"
"0",""
"0","# Reshape data to wide format with dates as rows and tickers as columns"
"0","# This format facilitates the calculation of returns across all stocks"
"0","prices_df <- pivot_wider(data = ticker_df, id_cols = ""date"", names_from = ""ticker"", values_from = ""close"")"
"0",""
"0","# Remove rows with missing values to ensure complete data"
"0","prices_df <- na.omit(prices_df)"
"0",""
"0","# Check the date range of our data"
"0","range(prices_df$date)"
"1","[1]"
"1"," ""2017-11-17"""
"1"," ""2025-06-20"""
"1","
"
"0","# Check dimensions (number of trading days Ã— number of stocks + date column)"
"0","dim(prices_df)"
"1","[1]"
"1"," 1874"
"1","   49"
"1","
"

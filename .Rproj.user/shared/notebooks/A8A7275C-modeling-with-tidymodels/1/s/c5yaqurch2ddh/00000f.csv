"0","#| label: model-evaluation"
"0",""
"0","# Select best hyperparameters based on ROC AUC"
"0","best_log_reg_params <- select_best(log_reg_tuned, metric = ""roc_auc"")"
"0","best_xgb_params <- select_best(xgb_tuned, metric = ""roc_auc"")"
"0",""
"0","# Finalize workflows with best parameters"
"0","final_log_reg_workflow <- log_reg_workflow %>%"
"0","  finalize_workflow(best_log_reg_params)"
"0",""
"0","final_xgb_workflow <- xgb_workflow %>%"
"0","  finalize_workflow(best_xgb_params)"
"0",""
"0","# Fit the final models on the full training data"
"0","final_log_reg_model <- final_log_reg_workflow %>%"
"0","  fit(data = training(validation_split))"
"0",""
"0","final_xgb_model <- final_xgb_workflow %>%"
"0","  fit(data = training(validation_split))"
"0",""
"0","# Make predictions on the validation set with both models"
"0","log_reg_val_results <- final_log_reg_model %>%"
"0","  predict(testing(validation_split)) %>%"
"0","  bind_cols(predict(final_log_reg_model, testing(validation_split), type = ""prob"")) %>%"
"0","  bind_cols(testing(validation_split) %>% select(default, customer_id))"
"0",""
"0","xgb_val_results <- final_xgb_model %>%"
"0","  predict(testing(validation_split)) %>%"
"0","  bind_cols(predict(final_xgb_model, testing(validation_split), type = ""prob"")) %>%"
"0","  bind_cols(testing(validation_split) %>% select(default, customer_id))"
"0",""
"0","# Evaluate model performance on validation set"
"0","log_reg_val_metrics <- log_reg_val_results %>%"
"0","  metrics(truth = default, estimate = .pred_class, .pred_yes)"
"0",""
"0","xgb_val_metrics <- xgb_val_results %>%"
"0","  metrics(truth = default, estimate = .pred_class, .pred_yes)"
"0",""
"0","cat(""Logistic Regression Validation Metrics:\n"")"
"1","Logistic Regression Validation Metrics:
"
"0","print(log_reg_val_metrics)"

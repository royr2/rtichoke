"0","#| label: calibration-fix"
"0",""
"0","# Create a calibration model using logistic regression (Platt scaling)"
"0","# First, prepare the validation predictions for calibration training"
"0","cal_data <- xgb_val_results %>%"
"0","  select(.pred_yes, default) %>%"
"0","  mutate(default_numeric = as.numeric(default == ""yes""))"
"0",""
"0","# Method 1: Manual Platt scaling (more transparent)"
"0","# Fit a logistic regression model to calibrate probabilities"
"0","calibration_model <- glm(default_numeric ~ .pred_yes, "
"0","                         data = cal_data, "
"0","                         family = binomial())"
"0",""
"0","# Function to apply calibration"
"0","apply_calibration <- function(predictions, cal_model) {"
"0","  calibrated_probs <- predict(cal_model, "
"0","                              newdata = data.frame(.pred_yes = predictions), "
"0","                              type = ""response"")"
"0","  return(calibrated_probs)"
"0","}"
"0",""
"0","# Apply calibration to validation predictions"
"0","xgb_val_results_calibrated <- xgb_val_results %>%"
"0","  mutate(.pred_yes_calibrated = apply_calibration(.pred_yes, calibration_model),"
"0","         .pred_no_calibrated = 1 - .pred_yes_calibrated)"

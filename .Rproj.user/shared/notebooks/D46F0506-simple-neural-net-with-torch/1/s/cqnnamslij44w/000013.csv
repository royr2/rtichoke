"0","#| label: architecture-comparison"
"0",""
"0","# Define different network architectures"
"0","create_network <- function(hidden_sizes) {"
"0","  nn_module("
"0","    initialize = function(hidden_sizes) {"
"0","      self$layers <- nn_module_list()"
"0","      "
"0","      # Input layer"
"0","      prev_size <- 1"
"0","      "
"0","      for(i in seq_along(hidden_sizes)) {"
"0","        self$layers$append(nn_linear(prev_size, hidden_sizes[i]))"
"0","        prev_size <- hidden_sizes[i]"
"0","      }"
"0","      # Output layer"
"0","      self$layers$append(nn_linear(prev_size, 1))"
"0","    },"
"0","    forward = function(x) {"
"0","      for(i in 1:(length(self$layers) - 1)) {"
"0","        x <- nnf_relu(self$layers[[i]](x))"
"0","      }"
"0","      # No activation on output layer"
"0","      self$layers[[length(self$layers)]](x)"
"0","    }"
"0","  )"
"0","}"
"0",""
"0","# Train different architectures"
"0","architectures <- list("
"0","  ""Simple (8)"" = c(8),"
"0","  ""Deep (16-8)"" = c(16, 8),"
"0","  ""Wide (32)"" = c(32),"
"0","  ""Very Deep (16-16-8)"" = c(16, 16, 8)"
"0",")"
"0",""
"0","results <- list()"
"0",""
"0","for(arch_name in names(architectures)) {"
"0","  cat(""Training"", arch_name, ""architecture...\n"")"
"0","  "
"0","  # Create and train model"
"0","  net_class <- create_network(architectures[[arch_name]])"
"0","  model_temp <- net_class(architectures[[arch_name]])"
"0","  optimizer_temp <- optim_adam(model_temp$parameters, lr = 0.01)"
"0","  "
"0","  # Quick training (fewer epochs for comparison)"
"0","  for(epoch in 1:200) {"
"0","    model_temp$train()"
"0","    optimizer_temp$zero_grad()"
"0","    y_pred_temp <- model_temp(x)"
"0","    loss_temp <- loss_fn(y_pred_temp, y)"
"0","    loss_temp$backward()"
"0","    optimizer_temp$step()"
"0","  }"
"0","  "
"0","  # Generate predictions"
"0","  model_temp$eval()"
"0","  with_no_grad({"
"0","    y_pred_arch <- model_temp(x_grid)"
"0","  })"
"0","  "
"0","  results[[arch_name]] <- data.frame("
"0","    x = x_grid_np,"
"0","    y_pred = as.numeric(y_pred_arch$squeeze()),"
"0","    architecture = arch_name"
"0","  )"
"0","}"
"1","Training"
"1"," "
"1","Simple (8)"
"1"," "
"1","architecture...
"
"1","Training"
"1"," "
"1","Deep (16-8)"
"1"," "
"1","architecture...
"
"1","Training"
"1"," "
"1","Wide (32)"
"1"," "
"1","architecture...
"
"1","Training"
"1"," "
"1","Very Deep (16-16-8)"
"1"," "
"1","architecture...
"
"0","# Combine results"
"0","all_results <- do.call(rbind, results)"
"0",""
"0","# Plot comparison"
"0","ggplot(all_results, aes(x = x, y = y_pred, color = architecture)) +"
"0","  geom_line(size = 1.2) +"
"0","  geom_line(data = comparison_df, aes(y = y_true, color = ""True Function""), "
"0","            size = 2, linetype = ""solid"") +"
"0","  geom_point(data = plot_df, aes(x = x, y = y_actual), "
"0","             color = ""gray50"", alpha = 0.3, inherit.aes = FALSE) +  labs("
"0","               title = ""Comparison of Different Neural Network Architectures"","
"0","               subtitle = ""Effects of network depth and width on learning performance"","
"0","               x = ""Input (x)"","
"0","               y = ""Output (y)"","
"0","               color = ""Architecture"""
"0","             ) +"
"0","  theme_minimal() +"
"0","  theme("
"0","    plot.title = element_text(size = 14, face = ""bold""),"
"0","    plot.subtitle = element_text(size = 12, color = ""gray60""),"
"0","    legend.position = ""top"""
"0","  )"
